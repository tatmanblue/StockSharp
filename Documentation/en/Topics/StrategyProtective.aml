<?xml version="1.0" encoding="utf-8"?>
<topic id="63952fce-6e43-4427-985a-1654e8d9cfc1" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

    <introduction>
      <para>
		The <token>stocksharp</token> has a mechanism of automatic position protection through <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.TakeProfitStrategy</codeEntityReference>
		and <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.StopLossStrategy</codeEntityReference> strategies using the <link xlink:href="8ea639f6-ce74-4a00-9f13-db59c8c2396f">child strategies</link>
		approach and the <codeEntityReference>T:StockSharp.Algo.Strategies.BasketStrategy</codeEntityReference>. These strategies have a number of advantages over
		usual stop order:
	  </para>
	  	<list class="ordered">
	  		<listItem>
	  			<para>Protective strategies do not register orders as long as the condition occurs. The orders deposit size is not blocked by the broker.</para>
	  		</listItem>
	  		<listItem>
	  			<para>Strategies are platform-independent, and hence will work through any broker regardless of its technology. And stop orders, which conditions set
	  			via <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Order.Condition</codeEntityReference>,
				emulated by the <token>rithmic</token>, <token>openecry</token> etc. platforms by itself, and their logic is locked to the broker.</para>
	  		</listItem>
	  		<listItem>
	  			<para>Protective strategies can work with direct connection to exchanges.</para>
	  		</listItem>
	  		<listItem>
	  			<para>Automatic tracking of partial or complete closing of the protected position (with the following stops removal). And also the position reverting.
	  			For example, when the position was long, and then it was turned into a short. In this case stops should be also "reverted".</para>
	  		</listItem>
		</list>
		
    </introduction>

    <prerequisites>
      <content>
        <para>
		  <link xlink:href="8ea639f6-ce74-4a00-9f13-db59c8c2396f">Child strategies</link>
		</para>
		<para>
			<link xlink:href="8c0327db-494a-4fe0-aba8-0d4b93dea60e">Event model</link>
		</para>
      </content>
    </prerequisites>
    
    <!-- One or more procedure or section elements -->

    <procedure>
      <title>Take-profit and stop-loss</title>

      <steps class="ordered">
		  <step>
			  <content>
				  <para>
					  As an example, the order registration for the "at market" purchase and the following protection of the long position considered. To do this,
					  the rule responsive to the order’s trades occurring (for details see the <link xlink:href="8c0327db-494a-4fe0-aba8-0d4b93dea60e">Event model</link>) created:
				  </para>
				  <code language="C#">
public class MyStrategy : Strategy
{
	public void OpenPosition()
	{
		var longPos = this.BuyAtMarket();
		
		// applying rules to track the order's trades
		longPos
			.WhenNewTrade()
			.Do(OnNewOrderTrade)
			.Apply(this);
		
		RegisterOrder(longPos);
	}
}
					</code>
			  </content>
		  </step>
        <step>
          <content>
          	<para>
          		In order to protect the position you should use <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.TakeProfitStrategy</codeEntityReference>
				or <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.StopLossStrategy</codeEntityReference> strategies. If you need simultaneous protection
				from both sides, it is recommended to use the <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.TakeProfitStopLossStrategy</codeEntityReference>.
				This strategy automatically changes the one of strategies volume with partial activation (for example, at the touch of a stop-loss level only part of
				the position has been closed, and then the market came back to break-even zone):
          	</para>
			<code language="C#"><![CDATA[
private void OnNewOrderTrade(MyTrade trade)
{
    // take is 40 points
    var takeProfit = new TakeProfitStrategy(trade, 40);

    // stop is 20 points
    var stopLoss = new StopLossStrategy(trade, 20);

    var protectiveStrategies = new TakeProfitStopLossStrategy(takeProfit, stopLoss);
    ChildStrategies.AddRange(protectiveStrategies);
}

]]></code>
          </content>
        </step>
      </steps>
    </procedure>
    
    <section>
      <title>Automatic closing and position reverting</title>

      <content>
        <para>
        	<codeEntityReference>T:StockSharp.Algo.Strategies.Protective.TakeProfitStrategy</codeEntityReference> and <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.StopLossStrategy</codeEntityReference>
        	strategies do not track partial position closing or its reverting (for example, the position was closed by hands at the terminal and was opened in the
        	opposite direction). To automatically track such situations in the algorithm, you must use <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.AutoProtectiveStrategy</codeEntityReference>.
        	This strategy by trades incoming into it (<codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.Protective.AutoProtectiveStrategy.ProcessNewMyTrade(StockSharp.BusinessEntities.MyTrade)</codeEntityReference>)
        	decides what to do: to protect them (if there is a position opening or its increase) or to stop the protective strategies (if there is a position closing or its
        	decrease). The strategy also automatically reverts protective strategies in case of position reverting (from long to short or from short to long).
        </para>
      </content>
    </section>

    <nextSteps>
      <content>
        <para>
		  <link xlink:href="eeaa9b57-9108-4cbb-a9c1-e135eee35ae5">Reports</link>
		</para>
      </content>
    </nextSteps>    
  </developerWalkthroughDocument>
</topic>
