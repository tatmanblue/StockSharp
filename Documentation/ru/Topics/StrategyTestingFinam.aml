<?xml version="1.0" encoding="utf-8"?>
<topic id="abfde7cc-fa0e-4705-b610-41b2ba1a2252" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
     <para>Для тестирования на истории в классе <codeEntityReference>T:StockSharp.Algo.Testing.HistoryEmulationConnector</codeEntityReference>, 
     наряду с использованием хранилища
     данных <codeEntityReference qualifyHint="false">T:StockSharp.Algo.Storages.IStorageRegistry</codeEntityReference>, 
     предусмотрен альтернативный механизм работы с источниками
     данных. Этот механизм позволяет "напрямую" загружать данные с серверов поставщиков исторической информации, 
     в частности с сервера Финам или же работать с собственными источниками
     данных.
     </para>
     <para>
     Рассмотрим работу этого механизма на примере получения данных с сервиса Финам. Для работы с Финам в <token>stocksharp</token>
     существует специальный класс <codeEntityReference>T:StockSharp.Finam.FinamMessageAdapter</codeEntityReference>, который
     позволяет получать свечи, тики и информацию об инструментах.
     <!--Func<DateTimeOffset, IEnumerable<Message>-->
     
     </para>
     
	<procedure>
		<title>Тестирование с данными, загруженными с Финама</title>
		<steps class="ordered">
			<step>
				<content>
				<para>
				 Сначала нужно получить информацию об инструментах с сервиса Финам. Для этого необходимо создать хранилище для инструментов
				 (<legacyBold>FinamSecurityStorage</legacyBold>) - класс, реализующий интерфейс
				 <codeEntityReference>T:StockSharp.Algo.Storages.ISecurityStorage</codeEntityReference>. 
				 Код такого класса есть в примере <legacyItalic>Samples/Testing/SampleHistoryTesting</legacyItalic>.
				</para>
				
				<list class="ordered">
  					<listItem>
  						<para>Создаем инструмент.</para>
  <code >
				<![CDATA[
var security = new Security
{
    Id = secid,
    Code = secCode,
    Board = board
};

 ]]>
				</code>
			    </listItem>
  					<listItem>
  					<para>Создаем экземпляр класса загрузчика данных с Финама:</para>
  					<code>
				<![CDATA[
// удаляем старый адаптер маркет-данных и добавляем новый от Финам
connector.Adapter.InnerAdapters.Remove(connector.MarketDataAdapter);
connector.Adapter.InnerAdapters.Add(new CustomHistoryMessageAdapter(new FinamMessageAdapter(connector.TransactionIdGenerator)));
]]>
  					</code>
  					</listItem>
				</list>
				</content>
			</step>
		  </steps>
	  </procedure>
    </introduction>
  </developerConceptualDocument>
</topic>