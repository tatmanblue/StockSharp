<?xml version="1.0"?>
<doc>
  <assembly>
    <name>StockSharp.Xaml.Charting</name>
  </assembly>
  <members>
    <member name="T:StockSharp.Xaml.Charting.BubbleChart">
      <summary>
            The graphical component to display bubble chart.
            </summary>
      <summary>
            BubbleChart
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.BubbleChart.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.BubbleChart" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.BubbleChart.ChartTheme">
      <summary>
            The name of the graphic theme.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.BubbleChart.Append(System.DateTime,System.Decimal,System.Decimal)">
      <summary>
            Append new values.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.BubbleChart.Update(System.DateTime,System.Decimal,System.Decimal)">
      <summary>
            Update values.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
      <param name="z">Z value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.BubbleChart.Clear">
      <summary>
            Clear chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.BubbleChart.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.BubbleChart.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.BubbleChart.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.Chart">
      <summary>
            The graphic component of the candles charts display.
            </summary>
      <summary>
            Chart
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.Chart" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.Areas">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.IsAutoScroll">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.IsAutoRange">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.XAxisType">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.AutoRangeInterval">
      <summary>
            Chart range/scroll interval. Default is 200ms.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.SecurityProvider">
      <summary>
            The provider of information about instruments.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.DisableIndicatorReset">
      <summary>
            Disable tracking indicator reset.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddArea(StockSharp.Xaml.Charting.ChartArea)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.RemoveArea(StockSharp.Xaml.Charting.ChartArea)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.ClearAreas">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.Elements">
      <summary>
            Chart elements.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.IChartElement)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.CandleSeries)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartIndicatorElement,StockSharp.Algo.Candles.CandleSeries,StockSharp.Algo.Indicators.IIndicator)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartOrderElement,StockSharp.BusinessEntities.Security)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartTradeElement,StockSharp.BusinessEntities.Security)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.GetIndicator(StockSharp.Xaml.Charting.ChartIndicatorElement)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.GetSource(StockSharp.Xaml.Charting.IChartElement)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.SetSource(StockSharp.Xaml.Charting.IChartElement,System.Object)">
      <summary>
            To set the source for the element.
            </summary>
      <param name="element">The chart element.</param>
      <param name="source">Source.</param>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.AutoRangeByAnnotations">
      <summary>
            To use annotations to define the visible range for the Y-axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.MinimumRange">
      <summary>
            The minimum number of visible candles.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.ChartTheme">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.ShowLegend">
      <summary>
            To show the legend.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.ShowOverview">
      <summary>
            To show the preview area.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.ShowPerfStats">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.IsInteracted">
      <summary>
            The interactive mode. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.CrossHair">
      <summary>
            Crosshair.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.CrossHairTooltip">
      <summary>
            To show the prompt message for the crosshair.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.CrossHairAxisLabels">
      <summary>
            To show values on the axis for the crosshair.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.AnnotationType">
      <summary>
            The prompt message type for drawing on the chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.OrderCreationMode">
      <summary>
            The order creation mode. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.TimeZone">
      <summary>
            Local time zone for all <see cref="T:System.DateTimeOffset" /> values conversion.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.ShowNonFormedIndicators">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Chart.IndicatorTypes">
      <inheritdoc />
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AreaAdded">
      <summary>
            The chart area creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AddCandles">
      <summary>
            The chart element creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AddIndicator">
      <summary>
            The chart element creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AddOrders">
      <summary>
            The chart element creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AddTrades">
      <summary>
            The chart element creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.RemoveElement">
      <summary>
            The chart element removal event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.RebuildCandles">
      <summary>
            Rebuild candles event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.CreateOrder">
      <summary>
            The new order creation event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.MoveOrder">
      <summary>
            Move order event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.CancelOrder">
      <summary>
            Cancel order event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AnnotationCreated">
      <summary>
            Annotation created event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AnnotationModified">
      <summary>
            Annotation created event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AnnotationDeleted">
      <summary>
            Annotation deleted event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.AnnotationSelected">
      <summary>
            Annotation selection event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.SubscribeCandleElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.SubscribeIndicatorElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.SubscribeOrderElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.SubscribeTradeElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.Chart.UnSubscribeElement">
      <summary>
            The event of the unsubscribe from getting data for the element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.Reset(System.Collections.Generic.IEnumerable{StockSharp.Xaml.Charting.IChartElement})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.Draw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.ReSubscribeElements">
      <summary>
            To re-subscribe to getting data for all elements.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Chart.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartActiveOrdersElement">
      <summary>
            The chart element representing active orders.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrdersElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartActiveOrdersElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.BuyPendingColor">
      <summary>
            Color of Buy order in non-active state.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.BuyColor">
      <summary>
            Color of Buy order in active state.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.BuyBlinkColor">
      <summary>
            Color of blinking in partially filled state (Buy).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.SellPendingColor">
      <summary>
            Color of Sell order in non-active state.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.SellColor">
      <summary>
            Color of Sell order in active state.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.SellBlinkColor">
      <summary>
            Color of blinking in partially filled state (Sell).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.CancelButtonColor">
      <summary>
            Cancel order button color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.CancelButtonBackground">
      <summary>
            Cancel order button background color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.ForegroundColor">
      <summary>
            Text color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartActiveOrdersElement.IsAnimationEnabled">
      <summary>
            Show chart element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrdersElement.OnDraw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrdersElement.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartActiveOrdersElement.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartAnnotationTypes">
      <summary>
            The annotations types.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.LineAnnotation">
      <summary>
            Line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.LineArrowAnnotation">
      <summary>
            Pointer.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.TextAnnotation">
      <summary>
            Text.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.BoxAnnotation">
      <summary>
            Area.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.HorizontalLineAnnotation">
      <summary>
            Horizontal line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.VerticalLineAnnotation">
      <summary>
            Vertical line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAnnotationTypes.RulerAnnotation">
      <summary>
            Ruler.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartAnnotation">
      <summary>
            Annotation.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAnnotation.Type">
      <summary>
            Annotation type.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartAnnotation.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartAnnotation" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartAnnotation.OnDraw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartAnnotation.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartAnnotation.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartArea">
      <summary>
            Chart area.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartArea.XAxisId">
      <summary>
            The primary title for the X-axis.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartArea.YAxisId">
      <summary>
            The primary title for the Y-axis.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartArea" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.Chart">
      <summary>
            Chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.XAxisType">
      <summary>
            Type of X axis for this chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.Title">
      <summary>
            Chart area name.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.Height">
      <summary>
            The height of the area.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.Elements">
      <summary>
            Area elements (<see cref="T:StockSharp.Xaml.Charting.ChartIndicatorElement" />, <see cref="T:StockSharp.Xaml.Charting.ChartCandleElement" />, etc.).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.XAxises">
      <summary>
            The list of horizontal axes.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartArea.YAxises">
      <summary>
            The list of vertical axes.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Charting.ChartArea" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.ToString">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartArea.Dispose">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartAxisAlignment">
      <summary>
            Location of axes on the chart.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisAlignment.Default">
      <summary>
            By default.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisAlignment.Right">
      <summary>
            On the right.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisAlignment.Left">
      <summary>
            On the left.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisAlignment.Top">
      <summary>
            On top.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisAlignment.Bottom">
      <summary>
            Bottom.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartAxisType">
      <summary>
            Chart axes types.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisType.DateTime">
      <summary>
            Time.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisType.CategoryDateTime">
      <summary>
            Time without breaks.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartAxisType.Numeric">
      <summary>
            Number.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartAxis">
      <summary>
            The chart axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.ChartArea">
      <summary>
            Chart area.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.IsDefault">
      <summary>
            Whether this axis can be removed from chart area.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.Id">
      <summary>
            Unique ID.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.IsVisible">
      <summary>
            Axis visibility.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.Title">
      <summary>
            Header.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.Group">
      <summary>
            Group.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.AxisAlignment">
      <summary>
            Axis location.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.AxisType">
      <summary>
            Axis type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.AutoRange">
      <summary>
            Auto range.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.FlipCoordinates">
      <summary>
            Flip coordinates.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DrawMajorTicks">
      <summary>
            Show main grid lines on the axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DrawMajorGridLines">
      <summary>
            Show main grid lines.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DrawMinorTicks">
      <summary>
            Show extra grid lines on the axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DrawMinorGridLines">
      <summary>
            Show extra grid lines.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DrawLabels">
      <summary>
            Show labels on the axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.TextFormatting">
      <summary>
            Labels format.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.SubDayTextFormatting">
      <summary>
            The format of X-axis labels within the day.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.TimeZone">
      <summary>
            Time zone for this axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartAxis.DataPointWidth">
      <summary>
            Current data point with for X axis.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartAxis.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartAxis.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartBandElement">
      <summary>
            The chart element representing a band.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartBandElement.Style">
      <summary>
            The band drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Band" />. Can also be <see cref="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.BandOneValue" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartBandElement.Line1">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.ChartBandElement.Line1" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartBandElement.Line2">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.ChartBandElement.Line2" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartBandElement.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartBandElement.CheckAxesCompatible(System.Nullable{StockSharp.Xaml.Charting.ChartAxisType},System.Nullable{StockSharp.Xaml.Charting.ChartAxisType})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartBandElement.OnDraw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartBandElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartBandElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartBaseViewModel">
      <summary>
            Base class for chart related view models.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartBaseViewModel.PropertyValueChanging">
      <summary>
            Raised before property value is changed.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartBaseViewModel.SetField``1(``0@,``0,System.String)">
      <summary>
            Set property value and raise events.
            </summary>
      <param name="field">Property backing field.</param>
      <param name="value">New value.</param>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartBaseViewModel.MapPropertyChangeNotification(System.ComponentModel.INotifyPropertyChanged,System.String,System.String[])">
      <summary>
            Helper method to raise property change notifications on this object if the event was raised on another object <paramref name="source" />.
            </summary>
      <param name="source">
      </param>
      <param name="nameFrom">
      </param>
      <param name="namesTo">
      </param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartCandleDrawStyles">
      <summary>
            Styles of the candles chart drawing.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.CandleStick">
      <summary>
            Japanese candles.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.Ohlc">
      <summary>
            Bars.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.LineOpen">
      <summary>
            Line (open).
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.LineHigh">
      <summary>
            Line (high).
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.LineLow">
      <summary>
            Line (low).
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.LineClose">
      <summary>
            Line (close).
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.BoxVolume">
      <summary>
            Box volumes.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.ClusterProfile">
      <summary>
            Cluster profile.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.Area">
      <summary>
            Area.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.PnF">
      <summary>
            X0 candle.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartCandleElement">
      <summary>
            The chart element representing a candle.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartCandleElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartCandleElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Title">
      <summary>
            Series header that will be shown on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.DrawStyle">
      <summary>
            Style of candles rendering.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.DownFillColor">
      <summary>
            Body color of decreasing candle.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.UpFillColor">
      <summary>
            Body color of increasing candle.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.DownBorderColor">
      <summary>
            Border color of decreasing candle.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.UpBorderColor">
      <summary>
            Border color of increasing candle.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.StrokeThickness">
      <summary>
            Line width (bar or border), with which candle will be drawn on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.AntiAliasing">
      <summary>
            Candles rendering smoothing (enabled by default).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.LineColor">
      <summary>
            Line color for <see cref="P:StockSharp.Xaml.Charting.ChartCandleElement.DrawStyle" /> Line*.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.AreaColor">
      <summary>
            Area color for <see cref="P:StockSharp.Xaml.Charting.ChartCandleElement.DrawStyle" /> set as <see cref="F:StockSharp.Xaml.Charting.ChartCandleDrawStyles.Area" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ShowAxisMarker">
      <summary>
            Show Y-axis market.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Colorer">
      <summary>
            Custom elements colorer.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Timeframe2Multiplier">
      <summary>
            Timeframe #2 multiplier.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Timeframe3Multiplier">
      <summary>
            Timeframe #3 multiplier.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.FontColor">
      <summary>
            Font color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Timeframe2Color">
      <summary>
            Timeframe #2 color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Timeframe2FrameColor">
      <summary>
            Timeframe #2 frame color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.Timeframe3Color">
      <summary>
            Timeframe #3 color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.MaxVolumeColor">
      <summary>
            Max volume color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ClusterLineColor">
      <summary>
            Cluster profile line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ClusterTextColor">
      <summary>
            Cluster text color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ClusterColor">
      <summary>
            Cluster color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ClusterMaxColor">
      <summary>
            Cluster max color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.ShowHorizontalVolumes">
      <summary>
            Show horizontal volume.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.LocalHorizontalVolumes">
      <summary>
            Local horizontal volume.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.HorizontalVolumeWidthFraction">
      <summary>
            Horizontal volume width fraction.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.HorizontalVolumeColor">
      <summary>
            Horizontal volume color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElement.HorizontalVolumeFontColor">
      <summary>
            Horizontal volume font color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartCandleElement.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartCandleElement.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartCandleElement.OnDraw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartCandleElementPicker">
      <summary>
            The window for select candle series element.
            </summary>
      <summary>
            ChartCandleElementPicker
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartCandleElementPicker.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartCandleElementPicker" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElementPicker.Elements">
      <summary>
            Elements.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartCandleElementPicker.SelectedElement">
      <summary>
            Selected element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartCandleElementPicker.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartDrawData">
      <summary>
            Chart drawing data.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartDrawData.IDrawValue">
      <summary>
            Interface which represents all chart draw data types.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartDrawData.IndicatorData">
      <summary>
            Indicator values to draw on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.IndicatorData.Time">
      <summary>Value timestamp.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.IndicatorData.Value">
      <summary>Indicator value.</summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.IndicatorData.#ctor(System.DateTimeOffset,StockSharp.Algo.Indicators.IIndicatorValue)">
      <summary>
            Create instance.
            </summary>
      <param name="dto">Value timestamp.</param>
      <param name="val">Indicator value.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData">
      <summary>
            Used to transfer annotation draw data.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.IsVisible">
      <summary>Show/hide annotation.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.IsEditable">
      <summary>Whether user can edit annotation.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.X1">
      <summary>
            X1 coordinate for annotation drawing.
            <see cref="T:System.DateTimeOffset" /> for coordinate mode <see cref="F:Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinateMode.Absolute" /> or <see cref="F:Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinateMode.RelativeY" />.
            <see cref="T:System.Double" /> otherwise.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.Y1">
      <summary>
            Y1 coordinate for annotation drawing.
            <see cref="T:System.Decimal" /> for coordinate mode <see cref="F:Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinateMode.Absolute" /> or <see cref="F:Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinateMode.RelativeX" />.
            <see cref="T:System.Double" /> otherwise.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.X2">
      <summary>
            X2 coordinate for annotation drawing.
            <see cref="T:System.DateTimeOffset" /> for coordinate mode <see cref="F:Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinateMode.Absolute" /> or <see cref="F:Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinateMode.RelativeY" />.
            <see cref="T:System.Double" /> otherwise.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.Y2">
      <summary>
            Y2 coordinate for annotation drawing.
            <see cref="T:System.Decimal" /> for coordinate mode <see cref="F:Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinateMode.Absolute" /> or <see cref="F:Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinateMode.RelativeX" />.
            <see cref="T:System.Double" /> otherwise.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.Stroke">
      <summary>Brush to draw lines and borders.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.Fill">
      <summary>Brush to fill background.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.Foreground">
      <summary>Brush to fill background.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.Thickness">
      <summary>Line thickness.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.ShowLabel">
      <summary>Turn on/off label show for horizontal and vertical lines.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.LabelPlacement">
      <summary>Label placement for horizontal and vertical lines.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.HorizontalAlignment">
      <summary>Alignment for horizontal lines.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.VerticalAlignment">
      <summary>Alignment for vertical lines.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.CoordinateMode">
      <summary>
            Coordinate mode.
            <see cref="F:Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinateMode.Absolute" /> means <see cref="T:System.DateTimeOffset" /> for X and <see cref="T:System.Decimal" /> price for Y.
            <see cref="F:Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinateMode.Relative" /> means relative to the screen edges: double. 0=top/left, 0.5=center, 1=bottom/right
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.Text">
      <summary>Text for text annotation.</summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.AnnotationData.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem">
      <summary>
            Chart drawing data item.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.TimeStamp">
      <summary>
            The time stamp of the new data generation.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.XValue">
      <summary>
            Value of X coordinate for <see cref="T:StockSharp.Xaml.Charting.ChartLineElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartCandleElement,System.Nullable{System.Windows.Media.Color})">
      <summary>
            Put candle color data.
            </summary>
      <param name="element">The chart element representing a candle.</param>
      <param name="color">Candle draw color.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.Candle)">
      <summary>
            Put the candle data.
            </summary>
      <param name="element">The chart element representing a candle.</param>
      <param name="candle">The candle data.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.Candle,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
      <summary>
            Put the candle data.
            </summary>
      <param name="element">The chart element representing a candle.</param>
      <param name="candle">Candle.</param>
      <param name="openPrice">Opening price.</param>
      <param name="highPrice">Highest price.</param>
      <param name="lowPrice">Lowest price.</param>
      <param name="closePrice">Closing price.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.Candle,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Tuple{System.Decimal,System.Decimal}[],System.Nullable{System.Decimal})">
      <summary>
            Put the candle data.
            </summary>
      <param name="element">The chart element representing a candle.</param>
      <param name="candle">Candle.</param>
      <param name="openPrice">Opening price.</param>
      <param name="highPrice">Highest price.</param>
      <param name="lowPrice">Lowest price.</param>
      <param name="closePrice">Closing price.</param>
      <param name="priceLevels">Price levels.</param>
      <param name="priceStep">Minimum price step.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartCandleElement,System.Object,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Tuple{System.Decimal,System.Decimal}[],System.Nullable{System.Decimal})">
      <summary>
            Put the candle data.
            </summary>
      <param name="element">The chart element representing a candle.</param>
      <param name="candleArg">Candle arg.</param>
      <param name="openPrice">Opening price.</param>
      <param name="highPrice">Highest price.</param>
      <param name="lowPrice">Lowest price.</param>
      <param name="closePrice">Closing price.</param>
      <param name="priceLevels">Price levels.</param>
      <param name="priceStep">Minimum price step.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartIndicatorElement,StockSharp.Algo.Indicators.IIndicatorValue)">
      <summary>
            Put the indicator data.
            </summary>
      <param name="element">The chart element representing the indicator.</param>
      <param name="value">The indicator value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartOrderElement,StockSharp.BusinessEntities.Order,System.String)">
      <summary>
            Put the order data.
            </summary>
      <param name="element">The chart element representing orders.</param>
      <param name="order">The order value.</param>
      <param name="errorMessage">Error registering/cancelling order.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartOrderElement,System.Int64,System.String,StockSharp.Messages.Sides,System.Decimal,System.Decimal,System.String)">
      <summary>
            Put the trade data.
            </summary>
      <param name="element">The chart element representing orders.</param>
      <param name="orderId">Order ID.</param>
      <param name="orderStringId">Order ID (as string, if electronic board does not use numeric order ID representation).</param>
      <param name="side">Order side (buy or sell).</param>
      <param name="price">Order price.</param>
      <param name="volume">Number of contracts in the order.</param>
      <param name="errorMessage">Error registering/cancelling order.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartTradeElement,StockSharp.BusinessEntities.MyTrade)">
      <summary>
            Put the order data.
            </summary>
      <param name="element">The chart element representing trades.</param>
      <param name="trade">The trade value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartTradeElement,System.Int64,System.String,StockSharp.Messages.Sides,System.Decimal,System.Decimal)">
      <summary>
            Put the trade data.
            </summary>
      <param name="element">The chart element representing trades.</param>
      <param name="tradeId">Trade ID.</param>
      <param name="tradeStringId">Trade ID (as string, if electronic board does not use numeric order ID representation).</param>
      <param name="side">Order side (buy or sell).</param>
      <param name="price">Trade price.</param>
      <param name="volume">Number of contracts in the trade.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartLineElement,System.Double,System.Double)">
      <summary>
            Put the line data.
            </summary>
      <param name="element">The chart element representing a line.</param>
      <param name="value1">The value1.</param>
      <param name="value2">The value2.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartBandElement,System.Decimal)">
      <summary>
            Put the line data.
            </summary>
      <param name="element">The chart element representing a band.</param>
      <param name="value">The value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.ChartBandElement,System.Double,System.Double)">
      <summary>
            Put the line data.
            </summary>
      <param name="element">The chart element representing a band.</param>
      <param name="value1">The value1.</param>
      <param name="value2">The value2.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem.Add(StockSharp.Xaml.Charting.IChartElement,System.Object)">
      <summary>
            Put the chart data.
            </summary>
      <param name="element">The chart element.</param>
      <param name="value">The chart value.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartDrawData" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.Group(System.DateTimeOffset)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" />.
            </summary>
      <param name="timeStamp">The time stamp of the new data generation.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.Add(StockSharp.Xaml.Charting.ChartAnnotation,StockSharp.Xaml.Charting.ChartDrawData.AnnotationData)">
      <summary>
            Put the annotation data.
            </summary>
      <param name="element">The chart element representing an annotation.</param>
      <param name="data">Annotation draw data.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.Add(StockSharp.Xaml.Charting.ChartActiveOrdersElement,StockSharp.BusinessEntities.Order,System.Nullable{System.Boolean},System.Boolean,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Decimal})">
      <summary>
            Put the active order data.
            </summary>
      <param name="element">The chart element representing active orders.</param>
      <param name="order">The order.</param>
      <param name="isFrozen">Do not allow user to edit the order from chart.</param>
      <param name="autoRemoveFromChart">Auto remove this order from chart when its state is final (<see cref="F:StockSharp.Messages.OrderStates.Done" />, <see cref="F:StockSharp.Messages.OrderStates.Failed" />).</param>
      <param name="isHidden">Whether an order operation has failed.</param>
      <param name="isError">Whether an order operation has failed.</param>
      <param name="price">Order price.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData" /> instance.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartDrawData.Group(System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" />.
            </summary>
      <param name="xValue">Value of X coordinate for the data.</param>
      <returns>
        <see cref="T:StockSharp.Xaml.Charting.ChartDrawData.ChartDrawDataItem" /> instance.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IChartElement">
      <summary>
            The interface that describes the chart element (indicator, candle, etc.).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.Id">
      <summary>
            Unique ID.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.ParentElement">
      <summary>
            Parent chart element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.ChildElements">
      <summary>
            Child chart elements.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.IsVisible">
      <summary>
            Whether this element is visible on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.IsLegend">
      <summary>
            Should this element be shown in the legend.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.XAxisId">
      <summary>
            X-axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.YAxisId">
      <summary>
            Y-axis.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.Chart">
      <summary>
            The chart on which the element is drawn.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartElement.ChartArea">
      <summary>
            The chart area on which the element is drawn.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartElement`1">
      <summary>
            The base class that describes the chart element (indicator, candle, etc.).
            </summary>
      <typeparam name="T">The chart element type.</typeparam>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.Chart">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.ChartArea">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.FullTitle">
      <summary>
            The full series title which will be displayed in the chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.IsVisible">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.IsLegend">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.XAxisId">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.YAxisId">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.Colorer">
      <summary>
            Custom elements colorer.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.XAxis">
      <summary>
            X axis this element currently attached to.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.YAxis">
      <summary>
            X axis this element currently attached to.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.ParentElement">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartElement`1.ChildElements">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.AddChildElement(StockSharp.Xaml.Charting.IChartElement,System.Boolean)">
      <summary>
            Add child chart element.
            </summary>
      <param name="element">
      </param>
      <param name="dontDraw">Do not create corresponding chart element. Used for nested elements.</param>
      <exception cref="T:System.InvalidOperationException">
      </exception>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.RemoveChildElement(StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            Remove child chart element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.OnReset">
      <summary>Reset element.</summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.OnDraw(StockSharp.Xaml.Charting.ChartDrawData)">
      <summary>
            Draw on root element.
            </summary>
      <param name="data">Chart drawing data.</param>
      <returns>
        <see langword="true" /> if the data was successfully drawn, otherwise, returns <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.CreateClone">
      <summary>
            Create clone but do not fill out fields/properties.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Charting.ChartElement`1" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElement`1.CheckAxesCompatible(System.Nullable{StockSharp.Xaml.Charting.ChartAxisType},System.Nullable{StockSharp.Xaml.Charting.ChartAxisType})">
      <summary>
            Check if the element can be drawn using supplied axis types.
            </summary>
      <param name="xType">X axis type.</param>
      <param name="yType">Y axis type.</param>
      <returns>
        <see langword="true" /> if supplied types are supported.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartElementEditor">
      <summary>
            The chart elements editor.
            </summary>
      <summary>
            ChartElementEditor
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElementEditor.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartElementEditor" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartElementEditor.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartHelper">
      <summary>
            Extension class for <see cref="T:StockSharp.Xaml.Charting.IChart" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.Draw(StockSharp.Xaml.Charting.IChart,StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.Candle)">
      <summary>
            To draw the candle.
            </summary>
      <param name="chart">Chart.</param>
      <param name="element">The chart element representing a candle.</param>
      <param name="candle">Candle.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.Draw(StockSharp.Xaml.Charting.IChart,System.DateTimeOffset,StockSharp.Xaml.Charting.IChartElement,System.Object)">
      <summary>
            To draw new data.
            </summary>
      <param name="chart">Chart.</param>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="element">The chart element.</param>
      <param name="value">Value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.Draw(StockSharp.Xaml.Charting.IChart,System.DateTimeOffset,System.Collections.Generic.IDictionary{StockSharp.Xaml.Charting.IChartElement,System.Object})">
      <summary>
            To process the new data.
            </summary>
      <param name="chart">Chart.</param>
      <param name="time">The time stamp of the new data generation.</param>
      <param name="values">New data.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.Draw(StockSharp.Xaml.Charting.IChart,System.Collections.Generic.IEnumerable{Ecng.Common.RefPair{System.DateTimeOffset,System.Collections.Generic.IDictionary{StockSharp.Xaml.Charting.IChartElement,System.Object}}})">
      <summary>
            To process the new data.
            </summary>
      <param name="chart">Chart.</param>
      <param name="values">New data.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.SaveToImage(StockSharp.Xaml.Charting.IChart)">
      <summary>
            To save the chart as image.
            </summary>
      <param name="chart">Chart.</param>
      <returns>The content of image.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.GetArea(StockSharp.Xaml.Charting.Chart,System.Int32)">
      <summary>
            To return the area by the specified index. If the number of areas is smaller then the missing areas will be created automatically.
            </summary>
      <param name="chart">Chart.</param>
      <param name="index">The area index.</param>
      <returns>Area.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.GetChart(StockSharp.Algo.Strategies.Strategy)">
      <summary>
            To get the chart associated with the passed strategy.
            </summary>
      <param name="strategy">Strategy.</param>
      <returns>Chart.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.SetChart(StockSharp.Algo.Strategies.Strategy,StockSharp.Xaml.Charting.IChart)">
      <summary>
            To set a chart for the strategy.
            </summary>
      <param name="strategy">Strategy.</param>
      <param name="chart">Chart.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.ToChartTheme(System.String)">
      <summary>
            Convert Devexpress theme to chart theme.
            </summary>
      <param name="appTheme">Devexpress theme.</param>
      <returns>Chart theme.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.UpdateTheme(StockSharp.Xaml.Charting.IThemeableChart)">
      <summary>
            Update theme for the specified chart.
            </summary>
      <param name="chart">Chart.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.IsVolumeProfileChart(StockSharp.Xaml.Charting.ChartCandleDrawStyles)">
      <summary>
            Check the specified style is volume profile based.
            </summary>
      <param name="style">Style.</param>
      <returns>Check result.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.GetIndicatorTypes">
      <summary>
            Get all indicator types.
            </summary>
      <returns>All indicator types.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.ExcludeObsolete(System.Collections.Generic.IEnumerable{StockSharp.Xaml.Charting.IndicatorType})">
      <summary>
            Exclude obsolete indicators.
            </summary>
      <param name="types">All indicator types.</param>
      <returns>Filtered collection.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartHelper.FillIndicators(StockSharp.Xaml.Charting.IChart)">
      <summary>
            Fill <see cref="P:StockSharp.Xaml.Charting.IChart.IndicatorTypes" /> using <see cref="M:StockSharp.Xaml.Charting.ChartHelper.GetIndicatorTypes" />.
            </summary>
      <param name="chart">Chart.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles">
      <summary>
            Indicator chart drawing styles.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Line">
      <summary>
            Line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.NoGapLine">
      <summary>
            Line (no gaps).
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.StepLine">
      <summary>
            Stepped line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Band">
      <summary>
            Band.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.BandOneValue">
      <summary>
            The range with a single value.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Dot">
      <summary>
            Dot.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Histogram">
      <summary>
            Histogram.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Bubble">
      <summary>
            Bubble.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.StackedBar">
      <summary>
            Stacked bar chart.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.DashedLine">
      <summary>
            Dashed line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Area">
      <summary>
            Area.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartIndicatorElement">
      <summary>
            The chart element representing the indicator.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.ToString">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.Title">
      <summary>
            Indicator header that will be shown on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.IndicatorPainter">
      <summary>
            The indicator renderer.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.Color">
      <summary>Compatibility property for <see cref="P:StockSharp.Xaml.Charting.ChartLineElement.Color" /> for <see cref="T:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter" />.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.AdditionalColor">
      <summary>Compatibility property for <see cref="P:StockSharp.Xaml.Charting.ChartLineElement.AdditionalColor" /> for <see cref="T:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter" />.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.StrokeThickness">
      <summary>Compatibility property for <see cref="P:StockSharp.Xaml.Charting.ChartLineElement.StrokeThickness" /> for <see cref="T:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter" />.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.AntiAliasing">
      <summary>Compatibility property for <see cref="P:StockSharp.Xaml.Charting.ChartLineElement.AntiAliasing" /> for <see cref="T:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter" />.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.DrawStyle">
      <summary>Compatibility property for <see cref="P:StockSharp.Xaml.Charting.ChartLineElement.Style" /> for <see cref="T:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter" />.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.ShowAxisMarker">
      <summary>Compatibility property for <see cref="P:StockSharp.Xaml.Charting.ChartLineElement.ShowAxisMarker" /> for <see cref="T:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter" />.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartIndicatorElement.DrawTemplate">
      <summary>Compatibility property for <see cref="P:StockSharp.Xaml.Charting.ChartLineElement.DrawTemplate" /> for <see cref="T:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter" />.</summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.OnDraw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.OnReset">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.CreateClone">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartIndicatorElement.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartLineElement">
      <summary>
            The chart element representing a line.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartLineElement.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartLineElement" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartLineElement.Color">
      <summary>
            Line color (bars, etc.), with which it will be drawn on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartLineElement.AdditionalColor">
      <summary>
            Additional line color (bars, etc.), with which it will be drawn on the chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartLineElement.StrokeThickness">
      <summary>
            The thickness of the line (bar, etc.) with which it will be drawn on the chart. The default is 1.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartLineElement.AntiAliasing">
      <summary>
            The smoothing of the line drawing. The default is enabled.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartLineElement.Style">
      <summary>
            The line drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Line" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartLineElement.ShowAxisMarker">
      <summary>
            Show Y-axis market.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartLineElement.DrawTemplate">
      <summary>
            The chart template for the Dot style <see cref="T:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartLineElement.OnDraw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartLineElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartLineElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartLineElement.CheckAxesCompatible(System.Nullable{StockSharp.Xaml.Charting.ChartAxisType},System.Nullable{StockSharp.Xaml.Charting.ChartAxisType})">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartBubbleElement">
      <summary>
            The chart element representing bubbles.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartBubbleElement.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartOrderElement">
      <summary>
            The chart element representing orders.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartOrderElement.DisplayFilter">
      <summary>
            Orders display filter.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartOrderElement.DisplayFilter.All">
      <summary>All orders.</summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartOrderElement.DisplayFilter.ErrorsOnly">
      <summary>Orders with errors.</summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartOrderElement.DisplayFilter.NoErrorsOnly">
      <summary>Orders with no errors.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartOrderElement.ErrorColor">
      <summary>
            Fill color of transaction errors.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartOrderElement.Filter">
      <summary>
            Orders display filter.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartOrderElement.#ctor">
      <summary>
            Initialize <see cref="T:StockSharp.Xaml.Charting.ChartOrderElement" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartOrderElement.OnDraw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartOrderElement.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartOrderElement.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartPanel">
      <summary>
            The extended graphical component for candle charts displaying.
            </summary>
      <summary>
            ChartPanel
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.SecurityProvider">
      <summary>
            The provider of information about instruments.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartPanel.RegisterOrderCommand">
      <summary>
            The command for the order registration.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartPanel.AddAreaCommand">
      <summary>
            The command to add the area to the chart.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartPanel.AddCandlesCommand">
      <summary>
            The command to add candles to the chart.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartPanel.AddIndicatorCommand">
      <summary>
            The command to add the indicator to the chart.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.SettingsChanged">
      <summary>
            The chart settings change event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.RegisterOrder">
      <summary>
            The event of the order registration.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.MoveOrder">
      <summary>
            The event of the order re-registration.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.CancelOrder">
      <summary>
            The event of the order cancellation.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.AnnotationCreated">
      <summary>
            Annotation created event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.AnnotationModified">
      <summary>
            Annotation modified event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.AnnotationDeleted">
      <summary>
            Annotation deleted event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.AnnotationSelected">
      <summary>
            Annotation selection event.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.SubscribeCandleElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.SubscribeIndicatorElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.SubscribeOrderElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.SubscribeTradeElement">
      <summary>
            The event of the subscription to getting data for the element.
            </summary>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPanel.UnSubscribeElement">
      <summary>
            The event of the unsubscribe from getting data for the element.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.Elements">
      <summary>
            Chart elements.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.IsAutoRange">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.XAxisType">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.ChartTheme">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.ShowPerfStats">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.OrderSettings">
      <summary>
            Chart order registering settings.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.ShareSettings">
      <summary>
            Chart share (upload image to web) settings.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.DisableIndicatorReset">
      <summary>
            Disable tracking indicator reset.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddArea(StockSharp.Xaml.Charting.ChartArea)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.RemoveArea(StockSharp.Xaml.Charting.ChartArea)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.ClearAreas">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.IChartElement)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.CandleSeries)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartIndicatorElement,StockSharp.Algo.Candles.CandleSeries,StockSharp.Algo.Indicators.IIndicator)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartOrderElement,StockSharp.BusinessEntities.Security)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartTradeElement,StockSharp.BusinessEntities.Security)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.RemoveElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.IChartElement)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.GetIndicator(StockSharp.Xaml.Charting.ChartIndicatorElement)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.GetSource(StockSharp.Xaml.Charting.IChartElement)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.SetSource(StockSharp.Xaml.Charting.IChartElement,System.Object)">
      <summary>
            To set the source for the element.
            </summary>
      <param name="element">The chart element.</param>
      <param name="source">Source.</param>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.IsInteracted">
      <summary>
            The interactive mode. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.OrderCreationMode">
      <summary>
            The order creation mode. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.MinimumRange">
      <summary>
            The minimum number of visible candles.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.ShowOverview">
      <summary>
            To show the preview area.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.TimeZone">
      <summary>
            Local time zone for all <see cref="T:System.DateTimeOffset" /> values conversion.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.IndicatorTypes">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.ShowNonFormedIndicators">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.ChartPanel" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.ReSubscribeElements">
      <summary>
            To re-subscribe to getting data for all elements.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.Areas">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.IsAutoScroll">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.Reset(System.Collections.Generic.IEnumerable{StockSharp.Xaml.Charting.IChartElement})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.Draw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanel.BackupService">
      <summary>
            Backup service for sharing exports.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanel.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartPanelOrderSettings">
      <summary>
            Chart order registering settings.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelOrderSettings.Security">
      <summary>
            The security.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelOrderSettings.Portfolio">
      <summary>
            The portfolio.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelOrderSettings.Volume">
      <summary>
            Number of contracts in the order.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanelOrderSettings.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanelOrderSettings.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartPanelShareSettings">
      <summary>
            Chart share (upload image to web) settings.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelShareSettings.IsEnabled">
      <summary>
            Is sharing enable.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelShareSettings.Period">
      <summary>
            Incremental period to refresh prev upload image.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelShareSettings.FileName">
      <summary>
            Name of uploaded image.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPanelShareSettings.Published">
      <summary>
            Is published.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanelShareSettings.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPanelShareSettings.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartPart`1">
      <summary>
            The base class that describes the part of the chart.
            </summary>
      <typeparam name="T">The chart element type.</typeparam>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.#ctor">
      <summary>
            Initialize <see cref="T:StockSharp.Xaml.Charting.ChartPart`1" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartPart`1.Id">
      <summary>
            Unique ID.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.OnEquals(`0)">
      <summary>
            Compare <see cref="T:StockSharp.Xaml.Charting.ChartElement`1" /> on the equivalence.
            </summary>
      <param name="other">Another value with which to compare.</param>
      <returns>
        <see langword="true" />, if the specified object is equal to the current object, otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.GetHashCode">
      <summary>
            Get the hash code of the object <see cref="T:StockSharp.Xaml.Charting.ChartElement`1" />.
            </summary>
      <returns>A hash code.</returns>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyChanging">
      <summary>
            The chart element properties value changing event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.RaisePropertyChanging(System.String)">
      <summary>
            To call the event <see cref="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyChanging" />.
            </summary>
      <param name="name">Property name.</param>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyChanged">
      <summary>
            The chart element properties value change event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.RaisePropertyChanged(System.String)">
      <summary>
            To call the event <see cref="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyChanged" />.
            </summary>
      <param name="name">Property name.</param>
    </member>
    <member name="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyValueChanging">
      <summary>
            The chart element properties value change start event.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.RaisePropertyValueChanging(System.String,System.Object)">
      <summary>
            To call the event <see cref="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyValueChanging" />.
            </summary>
      <param name="name">Property name.</param>
      <param name="value">New value of the property.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartPart`1.SetField``1(``0@,``0,System.String)">
      <summary>
            Update field value and raise <see cref="E:StockSharp.Xaml.Charting.ChartPart`1.PropertyChanged" /> event.
            </summary>
      <param name="field">Field to update.</param>
      <param name="value">New value.</param>
      <param name="name">Name of the field to update.</param>
      <typeparam name="TField">The field type.</typeparam>
      <returns>
        <see langword="true" /> if the field was updated. <see langword="false" /> otherwise.</returns>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartThemes">
      <summary>
            Chart themes.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartThemes.BlackSteel">
      <summary>
            BlackSteel theme.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartThemes.BrightSpark">
      <summary>
            BrightSpark theme.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartThemes.Chrome">
      <summary>
            Chrome theme.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartThemes.Electric">
      <summary>
            Electric theme.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartThemes.ExpressionDark">
      <summary>
            ExpressionDark theme.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartThemes.ExpressionLight">
      <summary>
            ExpressionLight theme.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.ChartThemes.Oscilloscope">
      <summary>
            Oscilloscope theme.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartTradeElement">
      <summary>
            The chart element representing trades.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartTradeElement.OnDraw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartTransactionElement`1">
      <summary>
            The base class that describes the Orders Or Trades chart element.
            </summary>
      <typeparam name="T">The element type.</typeparam>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartTransactionElement`1.#ctor">
      <summary>
            Initialize <see cref="T:StockSharp.Xaml.Charting.ChartTransactionElement`1" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.Title">
      <summary>
            Series header that will be shown on chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.BuyColor">
      <summary>
            Color of graphics element on chart, indicating buy.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.BuyStrokeColor">
      <summary>
            Border color of graphics element on chart, indicating buy.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.SellColor">
      <summary>
            Color of graphics element on chart, indicating sell.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.SellStrokeColor">
      <summary>
            Border color of graphics element on chart, indicating sell.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.UseAltIcon">
      <summary>
            Use alternative icons.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartTransactionElement`1.DrawSize">
      <summary>
            Draw size.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartTransactionElement`1.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartTransactionElement`1.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.CandleSettingsWindow">
      <summary>
            The window for edit <see cref="T:StockSharp.Algo.Candles.CandleSeries" />.
            </summary>
      <summary>
            CandleSettingsWindow
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.CandleSettingsWindow.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.CandleSettingsWindow" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.CandleSettingsWindow.Series">
      <summary>
            Candles settings.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.CandleSettingsWindow.SecurityProvider">
      <summary>
            The provider of information about instruments.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.CandleSettingsWindow.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ChartVolatilitySmileElement">
      <summary>
            The chart element representing a band.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartVolatilitySmileElement.Values">
      <summary>
            Points that displays source volatility values.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.ChartVolatilitySmileElement.Smile">
      <summary>
            Line that displays approximated volatility smile.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartVolatilitySmileElement.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartVolatilitySmileElement.CheckAxesCompatible(System.Nullable{StockSharp.Xaml.Charting.ChartAxisType},System.Nullable{StockSharp.Xaml.Charting.ChartAxisType})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartVolatilitySmileElement.OnDraw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartVolatilitySmileElement.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ChartVolatilitySmileElement.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.EquityCurveChart">
      <summary>
            The graphical component to display the equity curve.
            </summary>
      <summary>
            EquityCurveChart
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.EquityCurveChart.ChartTheme">
      <summary>
            The name of the graphic theme.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.EquityCurveChart.NoGapMode">
      <summary>
            To remove gaps (weekends, holidays) on the chart. When the mode is enabled and multiple curves are used then joint scaling will be lost. Enabled by default.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.EquityCurveChart" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.Draw(StockSharp.Xaml.Charting.ChartDrawData)">
      <summary>
            To process the new data.
            </summary>
      <param name="data">New data.</param>
    </member>
    <member name="P:StockSharp.Xaml.Charting.EquityCurveChart.Elements">
      <summary>
            Elements.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve(System.String,System.Windows.Media.Color,StockSharp.Xaml.Charting.ChartIndicatorDrawStyles,System.Guid)">
      <summary>
            To create new curve to draw the yield.
            </summary>
      <param name="title">The line title.</param>
      <param name="color">The line color.</param>
      <param name="style">The line drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Line" />.</param>
      <param name="id">Unique ID.</param>
      <returns>Chart element representing a line.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve(System.String,System.Windows.Media.Color,System.Windows.Media.Color,StockSharp.Xaml.Charting.ChartIndicatorDrawStyles,System.Guid)">
      <summary>
            To create new curve to draw the yield.
            </summary>
      <param name="title">The line title.</param>
      <param name="color">The line color.</param>
      <param name="secondColor">The additional line color. It is used to draw <see cref="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Area" />.</param>
      <param name="style">The line drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Line" />.</param>
      <param name="id">Unique ID.</param>
      <returns>Chart element representing a line.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve(System.String,System.Windows.Media.Color,System.Windows.Media.Color,StockSharp.Xaml.Charting.LineChartStyles,System.Guid)">
      <summary>
            To create new curve to draw the yield.
            </summary>
      <param name="title">The line title.</param>
      <param name="color">The line color.</param>
      <param name="secondColor">The additional line color. It is used to draw <see cref="F:StockSharp.Xaml.Charting.LineChartStyles.Area" />.</param>
      <param name="style">The line drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.LineChartStyles.Line" />.</param>
      <param name="id">Unique ID.</param>
      <returns>The collection of data that should be filled for the line drawing.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve(System.String,System.Windows.Media.Color,StockSharp.Xaml.Charting.LineChartStyles,System.Guid)">
      <summary>
            To create new curve to draw the yield.
            </summary>
      <param name="title">The line title.</param>
      <param name="color">The line color.</param>
      <param name="style">The line drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.LineChartStyles.Line" />.</param>
      <param name="id">Unique ID.</param>
      <returns>The collection of data that should be filled for the line drawing.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.RemoveCurve(StockSharp.Xaml.Charting.ChartBandElement)">
      <summary>
            To remove the yield curve from the chart.
            </summary>
      <param name="elem">The chart element obtained from the method <see cref="M:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve(System.String,System.Windows.Media.Color,StockSharp.Xaml.Charting.ChartIndicatorDrawStyles,System.Guid)" />.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.RemoveCurve(System.Collections.Generic.ICollection{StockSharp.Xaml.Charting.LineData{System.DateTime}})">
      <summary>
            To remove the yield curve from the chart.
            </summary>
      <param name="items">The collection of data obtained from the method <see cref="M:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve(System.String,System.Windows.Media.Color,StockSharp.Xaml.Charting.LineChartStyles,System.Guid)" />.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.Clear">
      <summary>
            To remove yield curves from the chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.Reset">
      <summary>
            To reset all chart elements.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.Reset(System.Collections.Generic.IEnumerable{System.Collections.Generic.ICollection{StockSharp.Xaml.Charting.LineData{System.DateTime}}})">
      <summary>
            To reset specified chart elements.
            </summary>
      <param name="items">Elements to reset.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.Reset(System.Collections.Generic.IEnumerable{StockSharp.Xaml.Charting.ChartBandElement})">
      <summary>
            To reset specified chart elements.
            </summary>
      <param name="elements">Elements to reset.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.EquityCurveChart.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.HeatmapChart">
      <summary>
            The graphical component to display the heatmap.
            </summary>
      <summary>
            HeatmapChart
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HeatmapChart.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.HeatmapChart" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.HeatmapChart.ChartTheme">
      <summary>
            The name of the graphic theme.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.HeatmapChart.ShowColorMapProperty">
      <summary>
        <see cref="T:System.Windows.DependencyProperty" /> for <see cref="P:StockSharp.Xaml.Charting.HeatmapChart.ShowColorMap" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.HeatmapChart.ShowColorMap">
      <summary>
            Show color map.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HeatmapChart.Draw(System.String[],System.String[],System.Double[0:,0:])">
      <summary>
            Draw chart values.
            </summary>
      <param name="xTitles">Titles on X axis.</param>
      <param name="yTitles">Titles on Y axis.</param>
      <param name="data">Values.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HeatmapChart.Clear">
      <summary>
            Clear chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HeatmapChart.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HeatmapChart.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HeatmapChart.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.HistogramChart">
      <summary>
            The graphical component to display histogram.
            </summary>
      <summary>
            HistogramChart
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HistogramChart.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.HistogramChart" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.HistogramChart.ChartTheme">
      <summary>
            The name of the graphic theme.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HistogramChart.Append(System.Decimal,System.Decimal)">
      <summary>
            Append new values.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HistogramChart.Update(System.Decimal,System.Decimal)">
      <summary>
            Update values.
            </summary>
      <param name="x">X value.</param>
      <param name="y">Y value.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HistogramChart.Clear">
      <summary>
            Clear chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HistogramChart.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HistogramChart.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.HistogramChart.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorAttribute">
      <summary>
            Attribute, applied to indicator's painter, to provide information about type of <see cref="T:StockSharp.Algo.Indicators.IIndicator" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorAttribute.Type">
      <summary>
            Indicator type.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorAttribute.#ctor(System.Type)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.IndicatorAttribute" />.
            </summary>
      <param name="type">Indicator type.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter">
      <summary>
            Indicator painter which is used by default.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter.Line">
      <summary>
            Default indicator line element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter.OnDraw(StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.DefaultPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.EnvelopePainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.Envelope" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.EnvelopePainter.Band">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.IndicatorPainters.EnvelopePainter.Band" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.EnvelopePainter.MovingAverage">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.IndicatorPainters.EnvelopePainter.MovingAverage" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.EnvelopePainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.EnvelopePainter.OnDraw(StockSharp.Algo.Indicators.Envelope,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.EnvelopePainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.EnvelopePainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.GatorOscillatorPainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.GatorOscillator" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.GatorOscillatorPainter.Histogram1">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.GatorOscillator.Histogram1" /> line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.GatorOscillatorPainter.Histogram2">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.GatorOscillator.Histogram2" /> line color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.GatorOscillatorPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.GatorOscillatorPainter.OnDraw(StockSharp.Algo.Indicators.GatorOscillator,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.GatorOscillatorPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.GatorOscillatorPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.RelativeVigorIndexPainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.RelativeVigorIndex" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.RelativeVigorIndexPainter.Signal">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.RelativeVigorIndex.Signal" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.RelativeVigorIndexPainter.Average">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.RelativeVigorIndex.Average" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.RelativeVigorIndexPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.RelativeVigorIndexPainter.OnDraw(StockSharp.Algo.Indicators.RelativeVigorIndex,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.RelativeVigorIndexPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.RelativeVigorIndexPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.StochasticOscillatorPainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.StochasticOscillator" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.StochasticOscillatorPainter.K">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.StochasticOscillator.K" /> line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.StochasticOscillatorPainter.D">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.StochasticOscillator.D" /> line color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.StochasticOscillatorPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.StochasticOscillatorPainter.OnDraw(StockSharp.Algo.Indicators.StochasticOscillator,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.StochasticOscillatorPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.StochasticOscillatorPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter">
      <summary>
            Chart painter for <see cref="T:StockSharp.Algo.Indicators.Alligator" /> indicator.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.Lips">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.Alligator.Lips" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.Teeth">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.Alligator.Teeth" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.Jaw">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.Alligator.Jaw" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.OnDraw(StockSharp.Algo.Indicators.Alligator,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AlligatorPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter">
      <summary>
            Chart painter for <see cref="T:StockSharp.Algo.Indicators.AverageDirectionalIndex" /> indicator.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.DiPlus">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.DiPlus" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.DiMinus">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.DiMinus" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.Adx">
      <summary>
        <see cref="T:StockSharp.Algo.Indicators.AverageDirectionalIndex" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.OnDraw(StockSharp.Algo.Indicators.AverageDirectionalIndex,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.AverageDirectionalIndexPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1">
      <summary>
            The indicator renderer base class on the chart (for example, lines, histograms, etc.).
            </summary>
      <typeparam name="TIndicator">Type of <see cref="T:StockSharp.Algo.Indicators.IIndicator" />.</typeparam>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.Element">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.InnerElements">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.IsAttached">
      <summary>
            Whether this painter is currently attached to chart element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.OnDraw(`0,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <summary>
            Draw values on chart.
            </summary>
      <param name="indicator">Indicator.</param>
      <param name="data">Indicator values to draw on chart.</param>
      <returns>
        <see langword="true" /> if the data was successfully drawn, otherwise, returns <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.Draw(StockSharp.Xaml.Charting.ChartDrawData)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.Reset">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.OnAttached(StockSharp.Xaml.Charting.ChartIndicatorElement)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.OnDetached">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.DrawValues(System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData},StockSharp.Xaml.Charting.IChartElement,System.Func{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData,System.Double})">
      <summary>
            Draw indicator values using value getter.
            </summary>
      <param name="vals">Values.</param>
      <param name="element">Element.</param>
      <param name="getValue">Converter.</param>
      <returns>
        <see langword="true" /> if the data was successfully drawn, otherwise, returns <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.DrawValues(System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData},StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            Draw indicator single double values.
            </summary>
      <param name="vals">Values.</param>
      <param name="element">Element.</param>
      <returns>
        <see langword="true" /> if the data was successfully drawn, otherwise, returns <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.DrawValues(System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData},System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData},StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            Draw indicator band values (2 doubles).
            </summary>
      <param name="vals1">Values 1.</param>
      <param name="vals2">Values 2.</param>
      <param name="element">Element.</param>
      <returns>
        <see langword="true" /> if the data was successfully drawn, otherwise, returns <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.DrawValues(System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData},System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData},StockSharp.Xaml.Charting.IChartElement,System.Func{System.Double,System.Double,System.Double})">
      <summary>
            Draw indicator converting from 2 doubles to one with converter.
            </summary>
      <param name="vals1">Values 1.</param>
      <param name="vals2">Values 2.</param>
      <param name="element">Element.</param>
      <param name="op">Operation.</param>
      <returns>
        <see langword="true" /> if the data was successfully drawn, otherwise, returns <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.AddChildElement(StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            Add inner chart element.
            </summary>
      <param name="element">Element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BaseChartIndicatorPainter`1.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.BollingerBands" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.Band">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.Band" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.MovingAverage">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.MovingAverage" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.OnDraw(StockSharp.Algo.Indicators.BollingerBands,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.BollingerBandsPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.Fractals" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.Up">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.Fractals.Up" /> dots color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.Down">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.Fractals.Down" /> dots color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.OnDraw(StockSharp.Algo.Indicators.Fractals,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.FractalsPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.Ichimoku" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.Tenkan">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.Ichimoku.Tenkan" /> line.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.Kijun">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.Ichimoku.Kijun" /> line.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.Chinkou">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.Ichimoku.Chinkou" /> line.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.Senkou">
      <summary>
            Senkou range.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.OnDraw(StockSharp.Algo.Indicators.Ichimoku,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.IchimokuPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.MovingAverageConvergenceDivergenceHistogram" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.Macd">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.Macd" /> line.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.Signal">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.Signal" /> line.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.Histogram">
      <summary>
        <see cref="P:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.Histogram" /> line.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.OnDraw(StockSharp.Algo.Indicators.MovingAverageConvergenceDivergenceHistogram,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceHistogramPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceSignalPainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.MovingAverageConvergenceDivergenceSignal" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceSignalPainter.Macd">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.MovingAverageConvergenceDivergenceSignal.Macd" /> line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceSignalPainter.SignalMa">
      <summary>
        <see cref="P:StockSharp.Algo.Indicators.MovingAverageConvergenceDivergenceSignal.SignalMa" /> line color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceSignalPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceSignalPainter.OnDraw(StockSharp.Algo.Indicators.MovingAverageConvergenceDivergenceSignal,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceSignalPainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.MovingAverageConvergenceDivergenceSignalPainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.ParabolicSarPainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.ParabolicSar" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.ParabolicSarPainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter">
      <summary>
            The chart element for <see cref="T:StockSharp.Algo.Indicators.VolumeIndicator" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.UpVolume">
      <summary>
            Up line color.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.DownVolume">
      <summary>
            Down line color.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.#ctor">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.OnDraw(StockSharp.Algo.Indicators.VolumeIndicator,System.Collections.Generic.IDictionary{StockSharp.Algo.Indicators.IIndicator,System.Collections.Generic.IList{StockSharp.Xaml.Charting.ChartDrawData.IndicatorData}})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.Load(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPainters.VolumePainter.Save(Ecng.Serialization.SettingsStorage)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.IThemeableChart">
      <summary>
            Base interface for all chart components.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IThemeableChart.ChartTheme">
      <summary>
            The name of the graphic theme.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.LineChartStyles">
      <summary>
            Equity curve chart drawing styles.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.LineChartStyles.Area">
      <summary>
            Chart drawing in the form of a fill area.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.LineChartStyles.Line">
      <summary>
            Chart drawing in the form of a line.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.LineChartStyles.DashedLine">
      <summary>
            Chart drawing in the form of a dashed line.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.EquityData">
      <summary>
            Equity data.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.EquityData.Time">
      <summary>
            The time stamp in which the equity value was equal to <see cref="P:StockSharp.Xaml.Charting.EquityData.Value" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.EquityData.Value">
      <summary>
            The equity value.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.ExtendedBaseApplication">
      <summary>
            The extended base class for WPF applications.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.ExtendedBaseApplication.#ctor">
      <summary>
            Initialize <see cref="T:StockSharp.Xaml.Charting.ExtendedBaseApplication" />.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IChart">
      <summary>
            The interface for work with the chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.Areas">
      <summary>
            Chart areas.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.IsAutoScroll">
      <summary>
            To scroll <see cref="P:StockSharp.Xaml.Charting.IChart.Areas" /> areas automatically when new data occurred. The default is enabled.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.IsAutoRange">
      <summary>
            To use automatic range for the X-axis. The default is off.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.XAxisType">
      <summary>
            Type of X axis for this chart.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.IndicatorTypes">
      <summary>
            The list of available indicators types.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.ShowNonFormedIndicators">
      <summary>
            Show non formed indicators values.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChart.ShowPerfStats">
      <summary>
            Show FPS.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddArea(StockSharp.Xaml.Charting.ChartArea)">
      <summary>
            To add an area to the chart.
            </summary>
      <param name="area">Chart area.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.RemoveArea(StockSharp.Xaml.Charting.ChartArea)">
      <summary>
            To remove the area from the chart.
            </summary>
      <param name="area">Chart area.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.ClearAreas">
      <summary>
            To remove all areas from the chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartCandleElement,StockSharp.Algo.Candles.CandleSeries)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="candleSeries">Candles series.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartIndicatorElement,StockSharp.Algo.Candles.CandleSeries,StockSharp.Algo.Indicators.IIndicator)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="candleSeries">Candles series.</param>
      <param name="indicator">Indicator.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartOrderElement,StockSharp.BusinessEntities.Security)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="security">Security.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.AddElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.ChartTradeElement,StockSharp.BusinessEntities.Security)">
      <summary>
            To add an element to the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
      <param name="security">Security.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.RemoveElement(StockSharp.Xaml.Charting.ChartArea,StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To remove the element from the chart.
            </summary>
      <param name="area">Chart area.</param>
      <param name="element">The chart element.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.GetIndicator(StockSharp.Xaml.Charting.ChartIndicatorElement)">
      <summary>
            To get an indicator which is associated with <see cref="T:StockSharp.Xaml.Charting.ChartIndicatorElement" />.
            </summary>
      <param name="element">The chart element.</param>
      <returns>Indicator.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.GetSource(StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            To get the data source for <see cref="T:StockSharp.Xaml.Charting.IChartElement" />.
            </summary>
      <param name="element">The chart element.</param>
      <returns>Market-data source.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.Reset(System.Collections.Generic.IEnumerable{StockSharp.Xaml.Charting.IChartElement})">
      <summary>
            To reset the chart elements values drawn previously.
            </summary>
      <param name="elements">Chart elements.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChart.Draw(StockSharp.Xaml.Charting.ChartDrawData)">
      <summary>
            To process the new data.
            </summary>
      <param name="data">New data.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IChartIndicatorPainter">
      <summary>
            The interface describing the indicator renderer on the chart (for example, lines, histograms, etc.).
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartIndicatorPainter.Element">
      <summary>
            The chart element representing the indicator.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IChartIndicatorPainter.InnerElements">
      <summary>
            Child elements.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChartIndicatorPainter.Draw(StockSharp.Xaml.Charting.ChartDrawData)">
      <summary>
            To process the new data.
            </summary>
      <param name="data">New data.</param>
      <returns>
        <see langword="true" /> if the data was successfully drawn, otherwise, returns <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChartIndicatorPainter.Reset">
      <summary>
            To reset painter child elements.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChartIndicatorPainter.OnAttached(StockSharp.Xaml.Charting.ChartIndicatorElement)">
      <summary>
            Called when this painter is attached to chart indicator element.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IChartIndicatorPainter.OnDetached">
      <summary>
            Called when this painter is detached from chart indicator element.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorPickerWindow">
      <summary>
            The indicator selection window.
            </summary>
      <summary>
            IndicatorPickerWindow
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPickerWindow.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.IndicatorPickerWindow" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPickerWindow.SelectedIndicatorType">
      <summary>
            The selected indicator type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPickerWindow.Indicator">
      <summary>
            Indicator.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPickerWindow.AutoSelectCandles">
      <summary>
            Auto select candles.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorPickerWindow.IndicatorTypes">
      <summary>
            The list of available indicators types.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorPickerWindow.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.IndicatorType">
      <summary>
            The indicator type description.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorType.Name">
      <summary>
            Indicator name.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorType.Description">
      <summary>
            The indicator description.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorType.Indicator">
      <summary>
            Indicator type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorType.Painter">
      <summary>
            The renderer type for indicator extended drawing.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorType.InputValue">
      <summary>
            Input values type.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.IndicatorType.OutputValue">
      <summary>
            Result values type.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.IndicatorType" />.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.#ctor(System.Type,System.Type)">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.IndicatorType" />.
            </summary>
      <param name="indicator">Indicator type.</param>
      <param name="painter">The renderer type for indicator extended drawing.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.Clone">
      <summary>
            Create a copy of <see cref="T:StockSharp.Xaml.Charting.IndicatorType" />.
            </summary>
      <returns>Copy.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.OnEquals(StockSharp.Xaml.Charting.IndicatorType)">
      <summary>
            Compare <see cref="T:StockSharp.Xaml.Charting.IndicatorType" /> on the equivalence.
            </summary>
      <param name="other">Another value with which to compare.</param>
      <returns>
        <see langword="true" />, if the specified object is equal to the current object, otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.IndicatorType.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="T:StockSharp.Xaml.Charting.LineData`1">
      <summary>
            Line data.
            </summary>
      <typeparam name="TKey">Key type.</typeparam>
    </member>
    <member name="P:StockSharp.Xaml.Charting.LineData`1.X">
      <summary>
            The X value.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.LineData`1.Y">
      <summary>
            The Y value.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.OptionPositionChartParams">
      <summary>
            The parameters types to be displayed on the chart <see cref="T:StockSharp.Xaml.Charting.OptionPositionChart" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Premium">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Premium(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Delta">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Delta(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Gamma">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Gamma(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Theta">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Theta(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Vega">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Vega(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Rho">
      <summary>
        <see cref="M:StockSharp.Algo.Derivatives.IBlackScholes.Rho(System.DateTimeOffset,System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.OptionPositionChart">
      <summary>
            The chart showing the position and options Greeks regarding to the underlying asset.
            </summary>
      <summary>
            OptionPositionChart
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionPositionChart.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.OptionPositionChart" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.ChartTheme">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.SecurityProvider">
      <summary>
            The provider of information about instruments.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.MarketDataProvider">
      <summary>
            The market data provider.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.PositionProvider">
      <summary>
            The position provider.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.ExchangeInfoProvider">
      <summary>
            Exchanges and trading boards provider.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.Model">
      <summary>
            Portfolio model for calculating the values of Greeks by the Black-Scholes formula.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.UnderlyingAsset">
      <summary>
            Underlying asset.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.Options">
      <summary>
            Option positions.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.ChartParam">
      <summary>
            The parameter type in the chart. The default is <see cref="F:StockSharp.Xaml.Charting.OptionPositionChartParams.Premium" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.ShowSeparated">
      <summary>
            To show position charts separately or as a single position. By default, it is displayed as a single position.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.ShowExpiration">
      <summary>
            To show the position chart at the time of expiration. The default is enabled.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionPositionChart.UseBlackModel">
      <summary>
            Whether to use the model <see cref="T:StockSharp.Algo.Derivatives.Black" />. By default, the model is not used.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionPositionChart.Refresh(System.Nullable{System.Decimal},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
            To redraw the chart.
            </summary>
      <param name="assetPrice">The current price of the underlying asset.</param>
      <param name="currentTime">The current time.</param>
      <param name="expiryDate">The expiration date.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionPositionChart.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionPositionChart.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionPositionChart.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.OptionVolatilitySmileChart">
      <summary>
            Options volatility smile chart.
            </summary>
      <summary>
            OptionVolatilitySmileChart
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.SmileStepProperty">
      <summary>Step size for volatility smile calculation.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.ChartTheme">
      <summary>
            The name of the graphic theme.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.SmileStep">
      <summary>
            Volatility smile draw step.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Xaml.Charting.OptionVolatilitySmileChart" />.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.Elements">
      <summary>
            Elements.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.CreateSmile(System.String,System.Windows.Media.Color,StockSharp.Xaml.Charting.ChartIndicatorDrawStyles,System.Guid)">
      <summary>
            To create new smile.
            </summary>
      <param name="title">The line title.</param>
      <param name="color">The line color.</param>
      <param name="style">The line drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Line" />.</param>
      <param name="id">Unique ID.</param>
      <returns>The collection of data that should be filled for the line drawing.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.CreateSmile(System.String,System.Windows.Media.Color,System.Windows.Media.Color,StockSharp.Xaml.Charting.ChartIndicatorDrawStyles,System.Guid)">
      <summary>
            To create new smile.
            </summary>
      <param name="title">The line title.</param>
      <param name="color">The line color.</param>
      <param name="secondColor">The additional line color. It is used to draw <see cref="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Area" />.</param>
      <param name="style">The line drawing style. The default is <see cref="F:StockSharp.Xaml.Charting.ChartIndicatorDrawStyles.Line" />.</param>
      <param name="id">Unique ID.</param>
      <returns>The collection of data that should be filled for the line drawing.</returns>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.RemoveSmile(System.Collections.Generic.ICollection{StockSharp.Xaml.Charting.LineData{System.Double}})">
      <summary>
            To remove the yield curve from the chart.
            </summary>
      <param name="items">The collection of data obtained from the method <see cref="M:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.CreateSmile(System.String,System.Windows.Media.Color,StockSharp.Xaml.Charting.ChartIndicatorDrawStyles,System.Guid)" />.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.Clear">
      <summary>
            To remove yield curves from the chart.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.Reset(System.Collections.Generic.IEnumerable{System.Collections.Generic.ICollection{StockSharp.Xaml.Charting.LineData{System.Double}}})">
      <summary>
            To reset specified chart elements.
            </summary>
      <param name="items">Elements to reset.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.Load(Ecng.Serialization.SettingsStorage)">
      <summary>
            Load settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.Save(Ecng.Serialization.SettingsStorage)">
      <summary>
            Save settings.
            </summary>
      <param name="storage">Settings storage.</param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.OptionVolatilitySmileChart.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.Ultrachart.ChartIndicatorElementSettingsObject">
      <summary>
            Proxy object to edit chart indicator element in property grid.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartIndicatorElementSettingsObject.#ctor(StockSharp.Xaml.Charting.IChartElement)">
      <summary>
            Create instance.
            </summary>
      <param name="element">
      </param>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartIndicatorElementSettingsObject.OnGetProperties(StockSharp.Xaml.Charting.IChartElement)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1">
      <summary>
            Base proxy object to edit chart element in property grid.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.PdSelector">
      <summary>
            Selector delegate to add condition to select wrapped object properties.
            </summary>
    </member>
    <member name="T:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor">
      <summary>
            Specialization of <see cref="T:System.ComponentModel.PropertyDescriptor" /> class for chart element properties.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.#ctor(System.String,System.Object,`0,System.Collections.Generic.IEnumerable{System.Attribute},StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase{`0}.PdSelector)">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.CreateWrapper(`0,StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase{`0}.PdSelector)">
      <summary>
            Create chart settings object wrapper for an object.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.Owner">
      <summary>
            Parent object.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.GetValue(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.SetValue(System.Object,System.Object)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.CanResetValue(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.ResetValue(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.ShouldSerializeValue(System.Object)">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.Attributes">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.ComponentType">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.IsReadOnly">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ProxyDescriptor.PropertyType">
      <inheritdoc />
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.Orig">
      <summary>
            Parent chart element or indicator.
            </summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.CategoriesMode">
      <summary>
            Categories mode of property grid.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.#ctor(`0)">
      <summary>
            Create instance.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.OnGetProperties(`0)">
      <summary>
            Get property list from wrapped object.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.ChartSettingsObjectBase`1.ToString">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation">
      <summary>
            Ruler annotation.
            </summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.RulerWidthProperty">
      <summary>Ruler width.</summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.RulerHeightProperty">
      <summary>Ruler height.</summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.Text1Property">
      <summary>First line of ruler text.</summary>
    </member>
    <member name="F:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.Text2Property">
      <summary>Second line of ruler text.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.RulerWidth">
      <summary>Ruler width.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.RulerHeight">
      <summary>Ruler height.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.Text1">
      <summary>First line of ruler text.</summary>
    </member>
    <member name="P:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.Text2">
      <summary>Second line of ruler text.</summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.#ctor(System.Double)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.OnApplyTemplate">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.GetSelectedCursor">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.MakeInvisible">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.MakeVisible(Ecng.Xaml.Charting.Visuals.Annotations.AnnotationCoordinates)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.AttachInteractionHandlersTo(System.Windows.FrameworkElement)">
      <summary>Auto-remove on any mouse click.</summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.DetachInteractionHandlersFrom(System.Windows.FrameworkElement)">
      <summary>Auto-remove on any mouse click.</summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.IsPointWithinBounds(System.Windows.Point)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.FromCoordinate(System.Double,Ecng.Xaml.Charting.Visuals.Axes.IAxis)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.RulerAnnotation.GetCurrentPlacementStrategy">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.Ultrachart.AreaAxesToTooltipConverter">
      <summary>
            Show red border around legend element if one or both axes are undefined.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.AreaAxesToTooltipConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.AreaAxesToTooltipConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Xaml.Charting.Ultrachart.AreaAxesToBorderColorConverter">
      <summary>
            Show red border around legend element if one or both axes are undefined.
            </summary>
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.AreaAxesToBorderColorConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Xaml.Charting.Ultrachart.AreaAxesToBorderColorConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <inheritdoc />
    </member>
  </members>
</doc>