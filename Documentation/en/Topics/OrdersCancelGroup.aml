<?xml version="1.0" encoding="utf-8"?>
<topic id="10c62aa1-5e15-4b3e-8b68-e55c2f055c32" revisionNumber="0">
  <developerUIReferenceDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

    <introduction>
      <para>
		  To cancel several orders the <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Connector.CancelOrders(System.Nullable{System.Boolean},StockSharp.BusinessEntities.Portfolio,System.Nullable{StockSharp.Messages.Sides},StockSharp.BusinessEntities.ExchangeBoard,StockSharp.BusinessEntities.Security,System.Nullable{StockSharp.Messages.SecurityTypes},System.Nullable{System.Int64})</codeEntityReference>
		  method used, which cancel the active orders by the parameters mask passed.
	  </para>
    </introduction>
    
    <!--<taskList>
      <content>
        <para>Optional task list</para>
      </content>
    </taskList>-->
    
    <!-- Any number of uiElementList and/or section elements -->

    <section>
      <title>Orders mass cancel examples</title>

      <content>
        <para>To cancel all ordinary orders (<codeEntityReference qualifyHint="true">F:StockSharp.Messages.OrderTypes.Limit</codeEntityReference>) for the specified portfolio and instrument:</para>
		  <code language="C#">_connector.CancelOrders(false, MainWindow.Instance.Portfolio, null, null, security);</code>

		  <para>
			  To cancel all orders for the specified instrument:
		  </para>
		  <code language="C#">_connector.CancelOrders(null, null, null, null, security);</code>

		  <para>
			  To cancel all long stop orders:
		  </para>
		  <code language="C#">_connector.CancelOrders(true, null, Sides.Buy, null, null);</code>
      </content>
    </section>
    
    <!--<uiElementList>
      <content>
        <para>Optional element list</para>
      </content>
    </uiElementList>-->

    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerUIReferenceDocument>
</topic>
