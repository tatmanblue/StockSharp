<?xml version="1.0" encoding="utf-8"?>
<topic id="4cd2b7f9-fe8d-404a-bec6-227783410beb" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para><token>stocksharp</token> предлагает несколько графических компонент для отображения логов, в основе которых лежит
      <codeEntityReference>T:StockSharp.Xaml.LogControl</codeEntityReference>. Другие компоненты: 
      <codeEntityReference>T:StockSharp.Xaml.LogWindow</codeEntityReference>,
      <codeEntityReference>T:StockSharp.Xaml.Monitor</codeEntityReference> и 
      <codeEntityReference>T:StockSharp.Xaml.MonitorWindow</codeEntityReference> только дополняют функциональность 
      <codeEntityReference>T:StockSharp.Xaml.LogControl</codeEntityReference>.
      </para>
      <para>При использовании визуальных компонентов логирования в качестве "слушателя" необходимо использовать логгер
      <codeEntityReference>T:StockSharp.Xaml.GuiLogListener</codeEntityReference>. Этот логгер обеспечивает потоковую синхронизацию с GUI при записи новых сообщений
      <codeEntityReference>T:StockSharp.Logging.LogMessage</codeEntityReference>.</para>
      <para>Чтобы в собственном классе реализовать возможность логирования необходимо реализовать интерфейс   
      <codeEntityReference>T:StockSharp.Logging.ILogReceiver</codeEntityReference>. Более простой способ это унаследоваться от класса 
      <codeEntityReference>T:StockSharp.Logging.BaseLogReceiver</codeEntityReference>, как это сделать 
      продемонстрировано в примере <legacyItalic>Samples\Misc\SampleLoggingGitHub</legacyItalic>:</para>
                         <code title="C#" language="C#">
	  				<![CDATA[
private class TestSource : BaseLogReceiver
{
}

private readonly LogManager _logManager = new LogManager();
private readonly TestSource _testSource = new TestSource();

public MainWindow()
{
	InitializeComponent();

	// immediate flush
	_logManager.FlushInterval = TimeSpan.FromMilliseconds(1);

	// set test log source
	_logManager.Sources.Add(_testSource);

	// set .NET Trace system based source
	_logManager.Sources.Add(new StockSharp.Logging.TraceSource());

	// write logs into MainWindow
	_logManager.Listeners.Add(new GuiLogListener(MonitorW));

	// and file logs.txt
	_logManager.Listeners.Add(new FileLogListener
	{
		FileName = "logs",
	});
}
	  				]]>
                  </code>
    </introduction>
 
    <relatedTopics>
       <link xlink:href="82437493-cd53-41eb-b756-d913af0f4f8e">Логирование</link>
       <link xlink:href="a206d470-20f1-42ed-b066-6e322d55d436">Панель логов</link>
       <link xlink:href="dc573dca-b2ea-44c4-884d-b7d0ba8b212d">Расширенная панель логов</link>
    </relatedTopics>
    
  </developerConceptualDocument>
</topic>