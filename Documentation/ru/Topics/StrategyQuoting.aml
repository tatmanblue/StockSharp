<?xml version="1.0" encoding="utf-8"?>
<topic id="24250c24-029c-4dbc-bc8b-4afde645e483" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
	<introduction>
	  <para>
		Алгоритм котирования позволяет контролировать позицию выставленных заявок в стакане. Необходимость в такой функциональности возникает тогда,
		когда необходимо быстро открывать и закрывать позиции по выгодным ценам. Также, благодаря быстрому мониторингу стакана, котирование позволяет
		реализовывать скальперские приводы на сверх малых тайм-фреймах.
	  </para>
	  <para>
		Также, котирование позволяет эмулировать рыночные заявки на бирже <token>forts</token>, где тип заявок
		<codeEntityReference qualifyHint="true">F:StockSharp.Messages.OrderTypes.Market</codeEntityReference> не поддерживается.
	  </para>
	</introduction>

    <prerequisites>
      <content>
		  <para>
			  <link xlink:href="8ea639f6-ce74-4a00-9f13-db59c8c2396f">Дочерние стратегии</link>
		  </para>

      </content>
    </prerequisites>
    

	<section>
      <content>
		<para>
		  Для реализации котирования в <token>stocksharp</token> входит класс <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.QuotingStrategy</codeEntityReference>.
		  Это базовый абстрактный класс для всех производных алгоритмов:
		</para>
		  <list class="bullet">
			<listItem>
			  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy</codeEntityReference> – данный алгоритм мониторит лучшую котировку
			  (<codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Security.BestBid</codeEntityReference> для покупки
			  или <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Security.BestAsk</codeEntityReference> для продажи),
			  выставляя свои заявки по этим же ценам, или чуть лучше, в зависимости от значения
			  <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy.PriceOffset</codeEntityReference>.
			  Дополнительно, в <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy</codeEntityReference> входит параметр
			  <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy.PriceType</codeEntityReference>, который контролирует
			  положение передвижения заявки в спреде:
			  <codeEntityReference qualifyHint="true">F:StockSharp.Algo.MarketPriceTypes.Following</codeEntityReference> – алгоритм смотрит лучшую котировку,
			  <codeEntityReference qualifyHint="true">F:StockSharp.Algo.MarketPriceTypes.Opposite</codeEntityReference> – лучшую противоположную котировку и
			  <codeEntityReference qualifyHint="true">F:StockSharp.Algo.MarketPriceTypes.Middle</codeEntityReference> – алгоритм будет ставить заявку в середину спреда.
			  Данный параметр влияет на то, как скоро будет удовлетворена заявка.
			</listItem>
			<listItem>
			  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.BestByVolumeQuotingStrategy</codeEntityReference> – смотрит, какой объем стоит перед котируемой заявкой,
			  и если он превышает допустимую норму <codeEntityReference>P:StockSharp.Algo.Strategies.Quoting.BestByVolumeQuotingStrategy.VolumeExchange</codeEntityReference>, то заявка передвигается на край спреда.
			</listItem>
			<listItem>
			  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.BestByPriceQuotingStrategy</codeEntityReference> – смотрит, насколько далеко котируемая заявка ушла от лучшей котировки.
			  Если был превышен допустимый интервал <codeEntityReference>P:StockSharp.Algo.Strategies.Quoting.BestByPriceQuotingStrategy.BestPriceOffset</codeEntityReference>, то заявка передвигается на край спреда.
			</listItem>
			<listItem>
			  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.LastTradeQuotingStrategy</codeEntityReference> – аналогичен <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy</codeEntityReference> за исключением того, что мониторится не стакан,
			  а последняя сделка <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Security.LastTrade</codeEntityReference>.
			</listItem>
			  <listItem>
				  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.LevelQuotingStrategy</codeEntityReference> – котирование по заданному уровню в стакане.
			  </listItem>
			  <listItem>
				  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.LimitQuotingStrategy</codeEntityReference> – котирование по лимитированной цене.
			  </listItem>
		  </list>
      </content>
    </section>

    <procedure>
      <title>Добавление в SampleSMA котирование</title>

	  <steps class="ordered">
        <step>
          <content>
            <para>
				Для того, чтобы алгоритм скользящей средней, описанный в разделе <link xlink:href="a8159c99-256b-46e4-80fe-7cf92944b4c9">Итерационная модель</link>, 
				стал работать совместно с котировщиком, перед началом работы необходимо запустить экспорт стакана:</para>
			  <code language="C#">if (!_isLkohOrderBookStarted)
{
	// для алгоритма котирования необходимо включить экспорт стакана
	_connector.SubscribeMarketDepth(lkoh);
	_isLkohOrderBookStarted = true;
}</code>
          </content>
        </step>
		  <step>
			  <content>
				  <para>Необходимо заменить код в классе SmaStrategy c:</para>
<code language="C#">// регистрируем ее
base.RegisterOrder(order);</code>
		<para>
		  на:
		</para>
<code language="C#">
var strategy = new MarketQuotingStrategy(direction, volume);
ChildStrategies.Add(strategy);
</code>
			  </content>
		  </step>
      </steps>
    </procedure>
    
    <nextSteps>
      <content>
        <para>
		  <link xlink:href="63952fce-6e43-4427-985a-1654e8d9cfc1">Тейк-профит и стоп-лосс</link>
		</para>
      </content>
    </nextSteps>
    
    <relatedTopics>
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>
