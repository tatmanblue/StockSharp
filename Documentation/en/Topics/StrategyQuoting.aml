<?xml version="1.0" encoding="utf-8"?>
<topic id="24250c24-029c-4dbc-bc8b-4afde645e483" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
	<introduction>
	  <para>
		Quoting algorithm allows you to control the position of the registered orders in the order book. The necessary of such functionality occurs when you need to
		quickly open and close positions at favorable prices. Also, due to the quick monitoring of the order book, the quoting allows to realize scalping tools
		for over small time frames.
	  </para>
	  <para>
		Also, the quoting can emulate market orders on a exchanges, where the <codeEntityReference qualifyHint="true">F:StockSharp.Messages.OrderTypes.Market</codeEntityReference>
		type of orders is not supported.
	  </para>
	</introduction>

    <prerequisites>
      <content>
		  <para>
			  <link xlink:href="8ea639f6-ce74-4a00-9f13-db59c8c2396f">Child strategies</link>
		  </para>

      </content>
    </prerequisites>
    

	<section>
      <content>
		<para>
		  To implement the quoting the <token>stocksharp</token> includes the <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.QuotingStrategy</codeEntityReference>
		  class. This is the base abstract class for all derivative algorithms:
		</para>
		  <list class="bullet">
			<listItem>
			  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy</codeEntityReference> – this algorithm monitors the best quote
			  (<codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Security.BestBid</codeEntityReference> for buy
			  or <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Security.BestAsk</codeEntityReference> for sell),
			  registering its orders for the same price or a little better, depending on the
			  <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy.PriceOffset</codeEntityReference> value.
			  Additionally, the <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy</codeEntityReference> includes the
			  <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy.PriceType</codeEntityReference>, 
			  parameter, which controls the position of the order movement in spread:
			  <codeEntityReference qualifyHint="true">F:StockSharp.Algo.MarketPriceTypes.Following</codeEntityReference> – the algorithm looks the best quote,
			  <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy.PriceType</codeEntityReference>, 
			  <codeEntityReference qualifyHint="true">F:StockSharp.Algo.MarketPriceTypes.Middle</codeEntityReference> – the algorithm will put the order in the middle
			  of the spread. This parameter affects how soon the order will be matched.
			</listItem>
			<listItem>
			  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.BestByVolumeQuotingStrategy</codeEntityReference> – looks what total volume has a better price than quoted order
			  and if it exceeds the permitted limit <codeEntityReference>P:StockSharp.Algo.Strategies.Quoting.BestByVolumeQuotingStrategy.VolumeExchange</codeEntityReference>,
			  the order is moved to the edge of the spread.
			</listItem>
			<listItem>
			  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.BestByPriceQuotingStrategy</codeEntityReference> – looks how far the quoted order is from the best quote.
			  If the tolerance interval <codeEntityReference>P:StockSharp.Algo.Strategies.Quoting.BestByPriceQuotingStrategy.BestPriceOffset</codeEntityReference> has been exceeded,
			  the order is moved to the edge of the spread.
			</listItem>
			<listItem>
			  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.LastTradeQuotingStrategy</codeEntityReference> – is similar to the <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.MarketQuotingStrategy</codeEntityReference>
			  except that it monitors not order book depth, but the last trade <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Security.LastTrade</codeEntityReference>.
			</listItem>
			  <listItem>
				  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.LevelQuotingStrategy</codeEntityReference> – quoting by the specified level in the order book.
			  </listItem>
			  <listItem>
				  <codeEntityReference>T:StockSharp.Algo.Strategies.Quoting.LimitQuotingStrategy</codeEntityReference> – quoting by the limited price.
			  </listItem>
		  </list>
      </content>
    </section>

    <procedure>
      <title>Quoting adding to the SampleSMA</title>

	  <steps class="ordered">
        <step>
          <content>
            <para>
				It is necessary to enable the export of the order book before starting work, so the moving average algorithm described in the
				<link xlink:href="a8159c99-256b-46e4-80fe-7cf92944b4c9">iteration model</link>,
				section begin to work in association with the strategy:</para>
			  <code language="C#">if (!_isAaplOrderBookStarted)
{
	_connector.SubscribeMarketDepth(aapl);
	_isAaplOrderBookStarted = true;	
}</code>
          </content>
        </step>
		  <step>
			  <content>
				  <para>It is necessary to replace the code in the SmaStrategy class from:</para>
<code language="C#">
base.RegisterOrder(order);</code>
		<para>
to:
		</para>
<code language="C#">
var strategy = new MarketQuotingStrategy(direction, volume);
ChildStrategies.Add(strategy);
</code>
			  </content>
		  </step>
      </steps>
    </procedure>
    
    <nextSteps>
      <content>
        <para>
		  <link xlink:href="63952fce-6e43-4427-985a-1654e8d9cfc1">Take-profit and stop-loss</link>
		</para>
      </content>
    </nextSteps>
    
    <relatedTopics>
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>
