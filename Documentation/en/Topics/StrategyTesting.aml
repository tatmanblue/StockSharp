<?xml version="1.0" encoding="utf-8"?>
<topic id="febbcf31-63d1-449d-847e-92fd8424f926" revisionNumber="0">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
		<para>
			Strategies written by using <codeEntityReference>T:StockSharp.Algo.Strategies.Strategy</codeEntityReference> can be tested in three modes:
		</para>
		<list class="ordered">
			<listItem>
				<link xlink:href="5b90a23e-24b9-474a-a699-da47b666194a"/> testing. With this kind of data both a market analysis to find patterns and the strategy
				parameters optimization may be carried out.
			</listItem>
			<listItem>
				<link xlink:href="ab42038e-836b-4c00-9332-0b2db2cbd948"/> testing. A convenient tool for initial strategy testing to identify errors in the algorithms.
				Or for automated tests that run on a schedule.
			</listItem>
			<listItem>
				<link xlink:href="d27245ae-abfd-4d6b-b8c4-d1a24a45116f"/> testing based on data received from a real connection to the trading system (for example,
				from <token>openecry</token>), but without the actual orders registration (execution is emulated based on incoming order books).
			</listItem>
		</list>
		<para>
			When using all three modes the maximum emphasis is focused on the fact that the strategy code, written by using <codeEntityReference>T:StockSharp.Algo.Strategies.Strategy</codeEntityReference>
			is not changed when switching from real trading to testing and back. This is achieved through the implementation of the
			<codeEntityReference>T:StockSharp.BusinessEntities.IConnector</codeEntityReference> main interface, which is a gateway to the trading system. How the
			interface is used – this has been shown already in the <link xlink:href="87d2cacd-5492-4bca-9140-7d7c3f5218d7">StockSharp Architecture</link> section.
			In testing mode not real trading system, but the emulation will act as the trading system (depending on the selected mode). Therefore, the strategy code
			will never know about it - whether it is trading with a real exchange, or it is the emulation.
		</para>
    </introduction>

    <relatedTopics>
    
    </relatedTopics>

  </developerConceptualDocument>
</topic>
