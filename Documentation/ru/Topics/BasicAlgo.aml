<?xml version="1.0" encoding="utf-8"?>
<topic id="e1d2c02b-ee6e-41ab-93c5-f2286f1fe897" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>Наравне с <link xlink:href="24250c24-029c-4dbc-bc8b-4afde645e483">Котирование</link> в <token>stocksharp</token> добавлен класс 
	  <codeEntityReference>T:StockSharp.Algo.TraderHelper</codeEntityReference>, в который входят различные методы простых торговых алгоритмов:</para>
    </introduction>
    <procedure>

      <steps class="ordered">
		  <step>
			  <content>
				  <para>Очистить стакан от собственных заявок через метод 
				  <codeEntityReference>M:StockSharp.Algo.TraderHelper.GetFilteredQuotes(System.Collections.Generic.IEnumerable{StockSharp.BusinessEntities.Quote},System.Collections.Generic.IEnumerable{StockSharp.BusinessEntities.Order},System.Collections.Generic.IEnumerable{StockSharp.BusinessEntities.Order})</codeEntityReference>
				  (чтобы выставлять заявки относительно других участников рынка, и предотвратить борьбу своих роботов друг с другом):</para>
				  <code language="C#"><![CDATA[// любой инструмент
var someSecurity = _connector.Securities.First();

var someOrders = new List<Order>();
// заполняем коллекцию собственными заявками

// вычисляем истинно-лучшую цену на покупку
Console.WriteLine(_connector.GetMarketDepth(someSecurity).GetFilteredQuotes(Sides.Buy, someOrders, null).Max(q => q.Price));]]></code>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  Обрезать цену через метод <codeEntityReference>M:StockSharp.Algo.TraderHelper.ShrinkPrice(StockSharp.BusinessEntities.Security,System.Decimal,StockSharp.Algo.ShrinkRules)</codeEntityReference>,
					  чтобы она стала кратной шагу цены, и торговая система приняла заявку:</para>
				  <code language="C#">// любой инструмент
var someSecurity = _connector.Securities.First();
Console.WriteLine(someSecurity.ShrinkPrice(13453.65342));</code>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  Получить позицию по совершенным сделкам через метод <codeEntityReference>Overload:StockSharp.Algo.TraderHelper.GetPosition</codeEntityReference>:</para>
				  <code language="C#">
Console.WriteLine(_connector.GetPosition(Portfolio,Security, clientCode, depoName);</code>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  Проверить, является ли текущее время торгуемым (не закончилась ли сессия, не начался ли клиринг) через метод <codeEntityReference>Overload:StockSharp.Algo.TraderHelper.IsTradeTime</codeEntityReference>:
				  </para>
				  <code language="C#">// любой инструмент
var someSecurity = _connector.Securities.First();

Console.WriteLine(someSecurity.Board.IsTradeTime(currentTime));</code>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  Остальные методы класса <codeEntityReference>T:StockSharp.Algo.TraderHelper</codeEntityReference>
					  описываются в разделах <link xlink:href="6267fec7-64e5-4488-ba08-c72cf61fcc9e">Снятие заявок</link> и
					  <link xlink:href="4b427409-9aa9-41d3-bb97-98745d1bba8e">Замена заявок</link>.
				  </para>
			  </content>
		  </step>
      </steps>
    </procedure>
    
    <relatedTopics>

		<link xlink:href="24250c24-029c-4dbc-bc8b-4afde645e483">Котирование</link>
		<link xlink:href="6267fec7-64e5-4488-ba08-c72cf61fcc9e">Снятие заявок</link>
		<link xlink:href="4b427409-9aa9-41d3-bb97-98745d1bba8e">Замена заявок</link>
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>