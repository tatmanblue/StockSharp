<?xml version="1.0" encoding="utf-8"?>
<topic id="a0a4c8df-2bba-4e1e-8ba9-e1fa98728f92" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <summary>
      <para>Данный топик предназначен для трейдеров, которые разрабатывают графические торговые программы с
	  помощью <token>stocksharp</token>, но недостаточно знакомы с азами программирования графического интерфейса под <token>dotnet</token>.</para>
    </summary>

    <introduction>
      <para>В <token>dotnet</token> существует специальная технология для построения графического интерфейса – <token>wpf</token> (до этого была
	  технология <token>winforms</token>, которая значительно уступает по графическим возможностям). В этой технологии для создания графических элементов 
	  используется специальный декларативный язык <externalLink>
		<linkText>XAML</linkText>
		<linkAlternateText>eXtensible Application Markup Language</linkAlternateText>
		<linkUri>https://msdn.microsoft.com/ru-ru/library/hh700354.aspx</linkUri>
		<linkTarget>_blank</linkTarget>
		</externalLink>.</para>
	  <para>Основное ограничение визуального API под Windows состоит в том, что нельзя обращаться из другого потока к элементам окна. Это связанно с ограничениями архитектуры Windows (подробнее описано здесь
	  <token>messagepump</token>). Реализации шлюза <codeEntityReference>T:StockSharp.BusinessEntities.IConnector</codeEntityReference> в целях повышения
	  производительности работают в многопоточном режиме. Поэтому, подписываясь на событие, например, 
	  <codeEntityReference qualifyHint="true">E:StockSharp.Algo.Connector.NewSecurity</codeEntityReference>,
	  нельзя напрямую выводить полученные данные в окно пользователя. Для этого нужно провести операцию синхронизации при помощи специального объекта
	  <externalLink>
		<linkText>Dispatcher</linkText>
		<linkAlternateText>Dispatcher</linkAlternateText>
		<linkUri>https://msdn.microsoft.com/ru-ru/library/system.windows.threading.dispatcher(v=vs.110).aspx</linkUri>
		<linkTarget>_blank</linkTarget>
		</externalLink>, который управляет очередью рабочих элементов потока. </para>
	  <para> Вот простой пример, как это делается:</para>
	  <code language="C#">
// обязательно нужно вызвать метод BeginInvoke,
// и уже в его обработчике можно обратиться к элементу окна 'Security' (это выпадающий список)
_connector.NewSecurity += security => this.Dispatcher.BeginInvoke((Action)(() => this.Security.ItemsSource = _connector.Securities));</code>
	  <para>
		<token>stocksharp</token> уже содержит специальные методы, которые скрывают использование Dispatcher и упрощают написание кода:
	  </para>
	  <code language="C#">// обязательно нужно вызвать метод GuiSync, прежде чем обратиться к элементу окна 'Security' (это выпадающий список)
_connector.NewSecurity += security => this.GuiSync(() => this.Security.ItemsSource = _connector.Securities);</code>

<section address="optionalAddress">
  <title>Графические компоненты S#</title>
  <content>
    <para>В состав <token>stocksharp</token> входит большое количество собственных графических компонент, которые размещены в пространствах имен 
<codeEntityReference qualifyHint="true">N:StockSharp.Xaml</codeEntityReference>, <codeEntityReference qualifyHint="true">N:StockSharp.Xaml.Charting</codeEntityReference>
и <codeEntityReference qualifyHint="true">N:StockSharp.Xaml.Diagram</codeEntityReference>. Некоторые специфические компоненты находятся в пространствах имен коннекторов,
 как например, комбинированный список <codeEntityReference qualifyHint="false">T:StockSharp.SmartCom.Xaml.SmartComAddressComboBox</codeEntityReference> для выбора адреса сервера
 <token>smartcom</token>.
 </para>
<para>
 <token>stocksharp</token> имеет различные контролы для:
</para>

<list class="bullet">
  <listItem><para>поиска и выбора данных (инструментов, портфелей, адресов); </para></listItem>
  <listItem><para>создания заявок; </para></listItem>
  <listItem><para>отображения биржевой и другой информации (сделки, заявки, транзакции, стаканы, логи и т.д.);</para></listItem>
  <listItem><para>построения графиков.</para></listItem>
</list>


<para>
	 Для доступа к графическим контролам <token>stocksharp</token> в коде XAML необходимо определить псевдонимы для соответствующих пространств имен и использовать эти
	 псевдонимы в коде XAML. Как это сделать показано в следующем примере:
</para>
	  <code language="XAML">
	  <![CDATA[
<Window x:Class="SampleSmartSMA.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:loc="clr-namespace:StockSharp.Localization;assembly=StockSharp.Localization"
        xmlns:sx="clr-namespace:StockSharp.Xaml;assembly=StockSharp.Xaml"
        xmlns:ss="clr-namespace:StockSharp.SmartCom.Xaml;assembly=StockSharp.SmartCom"
        xmlns:charting="http://schemas.stocksharp.com/xaml"
        Title="{x:Static loc:LocalizedStrings.XamlStr570}" Height="700" Width="900">
    
    <Grid>
   </Grid>
</Window>
	]]>
</code>

  </content>
</section>
 	  
    </introduction>
    
  </developerWalkthroughDocument>
</topic>