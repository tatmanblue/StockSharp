<?xml version="1.0" encoding="utf-8"?>
<topic id="94e71651-8964-41fc-866d-3ff65f513440" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
      	<codeEntityReference>T:StockSharp.Xaml.OrderConditionalWindow</codeEntityReference> - the window for creating a conditional order.
      </para>
      <mediaLink><image placement="left" xlink:href="GUI_OrderConditionalWindow" /></mediaLink>
      <para>
       <legacyBold>Main properties</legacyBold>
       </para>
      
		<list class="bullet">
  			<listItem>
  				<para>
  					<codeEntityReference>P:StockSharp.Xaml.OrderConditionalWindow.Portfolios</codeEntityReference> - the list of portfolios.
  				</para>
  			</listItem>
  			<listItem>
  				<para>
  					<codeEntityReference>P:StockSharp.Xaml.OrderConditionalWindow.SecurityProvider</codeEntityReference> - provider of information about instruments.
  				</para>
  			</listItem>
  			<listItem>
  				<para>
  					<codeEntityReference>P:StockSharp.Xaml.OrderConditionalWindow.MarketDataProvider</codeEntityReference> - provider of market data.
  				</para>
  			</listItem>
  			<listItem>
  			  	<para>
  					<codeEntityReference>P:StockSharp.Xaml.OrderConditionalWindow.Adapter</codeEntityReference> - message adapter.
  				</para>
  			</listItem>
  			<listItem>
  			  	<para>
  					<codeEntityReference>P:StockSharp.Xaml.OrderConditionalWindow.Order</codeEntityReference> - the created order.
  				</para>
  			</listItem>
		</list>
		
	  <para>
Below is the code snippet with its use. The code example is taken from <legacyItalic>Samples/InteractiveBrokers/SampleIB</legacyItalic>.
      </para>
      
      
      
              <code title="C#" language="C#">
					  <![CDATA[
...

private readonly Connector _connector = new Connector();

...
private void NewStopOrderClick(object sender, RoutedEventArgs e)
{
	var newOrder = new OrderConditionalWindow
	{
		Order = new Order
		{
			Security = SecurityPicker.SelectedSecurity,
			Type = OrderTypes.Conditional,
			ExpiryDate = DateTime.Today
		},
		SecurityProvider = _connector,
		MarketDataProvider = _connector,
		Portfolios = new PortfolioDataSource(_connector),
		Adapter = _connector.Adapter
	};

	if (newOrder.ShowModal(this))
		_connector.RegisterOrder(newOrder.Order);
}
              		
	  				]]>
             </code>
    </introduction>
  </developerConceptualDocument>
</topic>
