<?xml version="1.0" encoding="utf-8"?>
<topic id="41e6ea41-f8f8-4788-b5ea-c1c12e24007a" revisionNumber="1">
	<developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
    	<para>
				Sometimes you want to set multiple rules in suspension mode (prevent to trigger any of them until code initialization will be finished).
				To do this, the <codeEntityReference qualifyHint="true">M:StockSharp.Algo.MarketRuleHelper.SuspendRules(System.Action)</codeEntityReference>
				method is used.
		</para>
    
    </introduction>


    <section address="Section2">
		<title>Rules suspension using</title>
		<content>
			<procedure>
				<steps class="bullet">
				<step>
						<content>
							<para>Out of the strategy:</para>
			
							<code language="C#">
							<![CDATA[
MarketRuleHelper.SuspendRules(() =>	
{
	order
		.WhenRegistered(Connector)
		.Do(() => Connector.AddInfoLog("The order was successfully registered."))
		.Once()
		.Apply(this);
	
	order
		.WhenCancelled(Connector)
		.Do(() => Connector.AddInfoLog("The order was successfully cancelled."))
		.Once()
		.Apply(this);
});
							]]>
							</code>				
						</content>
					</step>
			
					<step>
						<content>
							<para>Inside the strategy:</para>
					
							<code language="C#">
							<![CDATA[
class FirstStrategy : Strategy
{
	...
	
       this.SuspendRules(() =>
       {
		_connector
               .WhenCandlesFinished(_series)
               .Do(FinishCandle)
               .Apply(this);

           Security
               .WhenNewTrade(Connector)
               .Do(NewTrade)
               .Apply(this);
       });
   }

    ...
}
							]]>
							</code>						
						</content>
					</step>			
				</steps>
			</procedure>	
		</content>
	</section>

	</developerWalkthroughDocument>
</topic>
