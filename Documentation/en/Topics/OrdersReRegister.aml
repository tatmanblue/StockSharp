<?xml version="1.0" encoding="utf-8"?>
<topic id="4b427409-9aa9-41d3-bb97-98745d1bba8e" revisionNumber="0">
  <developerHowToDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

	<introduction>
		<para>
			Orders replacement in the trading algorithms creating is more advanced way than the <link xlink:href="6267fec7-64e5-4488-ba08-c72cf61fcc9e">Orders cancel</link>
			and the following registration. To replace the order you should call the <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Connector.ReRegisterOrder(StockSharp.BusinessEntities.Order,StockSharp.BusinessEntities.Order)</codeEntityReference>
			method.
		</para>
	  <para>
			As the result or orders replacement the new <codeEntityReference>T:StockSharp.BusinessEntities.Order</codeEntityReference>,
			object created, which contains old order information plus the changed part. Subsequently, if you want to work with the changed order (for example, to cancel
			or to change it again), you must use this new <codeEntityReference>T:StockSharp.BusinessEntities.Order</codeEntityReference> object.
	  </para>

		<para>The following example shows how "to move" the order at the best price:</para>
	</introduction>

    <!-- Specify at least one procedure or section/procedure and codeExample -->

    <!--<procedure>
      <title>Optional procedure</title>

      <steps class="ordered">
        <step>
          <content>
            <para>The first step of the procedure</para>
          </content>
        </step>
      </steps>
    </procedure>

    <section>
      <title>Optional section</title>

      <content>
        <para>Some topic content</para>
        <procedure>
          <title>Required procedure</title>

          <steps class="ordered">
            <step>
              <content>
                <para>The first step of the procedure.</para>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>-->

      <code language="C#"><![CDATA[if (registeredOrder.Security.BestBid != null && registeredOrder.Security.BestAsk != null)
{
	// registeredOrder - successfully registered order.
	var newOrder = registeredOrder.Clone();

	// changing the price to be the best on order book
	newOrder.Price = (registeredOrder.Direction == Sides.Buy ? registeredOrder.Security.BestBid : registeredOrder.Security.BestAsk).Price;

	// sending request the replace our order with new price
	_connector.ReRegisterOrder(registeredOrder, newOrder);
}]]></code>

    <!--<buildInstructions>
      <content>
        <para>Optional information on building examples in this topic</para>
      </content>
    </buildInstructions>

    <robustProgramming>
      <content>
        <para>Optional information about things such as error handling</para>
      </content>
    </robustProgramming>

    <security>
      <content>
        <para>Optional information about security</para>
      </content>
    </security>-->

    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->
		<link xlink:href="6267fec7-64e5-4488-ba08-c72cf61fcc9e">Orders cancel</link>

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerHowToDocument>
</topic>
